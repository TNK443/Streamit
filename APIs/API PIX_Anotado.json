{
  "openapi": "3.0.0",
  "info": {
    "title": "API Pix",
    "version": "2.6.1",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Suporte PIX BCB",
      "email": "suporte.pix@bcb.gov.br",
      "url": "https://www.bcb.gov.br/estabilidadefinanceira/pix"
    },
    "description": "API Pix."
  },
  "servers": [
    {
      "url": "https://pix.example.com/api/",
      "description": "Servidor de Produção"
    },
    {
      "url": "https://pix-h.example.com/api/",
      "description": "Servidor de Homologação"
    }
  ],
  "tags": [
    {
      "name": "CobPayload",
      "x-displayName": "Reúne endpoints (locations) que retornam o  Payload JSON que representa uma Cobrança."
    },
    {
      "name": "Cob",
      "x-displayName": "Gerenciamento de cobranças para pagamento imediato."
    },
    {
      "name": "CobV",
      "x-displayName": "Gerenciamento de cobranças com vencimento."
    },
    {
      "name": "LoteCobV",
      "x-displayName": "Gerenciamento de cobranças com vencimento em lote."
    },
    {
      "name": "PayloadLocation",
      "x-displayName": "Configuração de locations para payloads."
    },
    {
      "name": "Pix",
      "x-displayName": "Gerenciamento de Pix recebidos."
    },
    {
      "name": "Webhook",
      "x-displayName": "Gerenciamento de notificações."
    }
  ],
  "paths": {
    "/cob/{txid}": {
      "parameters": [
        {
          "name": "txid",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/TxId"
          }
        }
      ],
      "put": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Coleta",
          "Armazenamento"
        ],
        "tags": [
          "Cob"
        ],
        "summary": "Criar cobrança imediata.",
        "security": [
          {
            "OAuth2": [
              "cob.write"
            ]
          }
        ],
        "description": "Endpoint para criar uma cobrança imediata.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CobBody"
        },
        "responses": {
          "201": {
            "description": "Cobrança imediata criada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobGerada"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse1"
                  },
                  "retorno2": {
                    "$ref": "#/components/examples/cobResponse5"
                  },
                  "retorno3": {
                    "$ref": "#/components/examples/cobResponse6"
                  },
                  "retorno4": {
                    "$ref": "#/components/examples/cobResponse7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaCobExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "patch": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "tags": [
          "Cob"
        ],
        "summary": "Revisar cobrança imediata.",
        "security": [
          {
            "OAuth2": [
              "cob.write"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CobBodyRevisada"
        },
        "responses": {
          "200": {
            "description": "Cobrança imediata revisada. A revisão deve ser incrementada em 1.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobGerada"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/OperacaoInvalidaCobExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "parameters": [
          {
            "name": "revisao",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Revisao"
            }
          }
        ],
        "tags": [
          "Cob"
        ],
        "summary": "Consultar cobrança imediata.",
        "security": [
          {
            "OAuth2": [
              "cob.read"
            ]
          }
        ],
        "description": "Endpoint para consultar uma cobrança através de um determinado txid.",
        "responses": {
          "200": {
            "description": "Dados da cobrança imediata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobCompleta"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse1"
                  },
                  "retorno2": {
                    "$ref": "#/components/examples/cobResponse2"
                  },
                  "retorno3": {
                    "$ref": "#/components/examples/cobResponse5"
                  },
                  "retorno4": {
                    "$ref": "#/components/examples/cobResponse6"
                  },
                  "retorno5": {
                    "$ref": "#/components/examples/cobResponse7"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/cob": {
      "post": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Coleta",
          "Armazenamento"
        ],
        "tags": [
          "Cob"
        ],
        "summary": "Criar cobrança imediata.",
        "security": [
          {
            "OAuth2": [
              "cob.write"
            ]
          }
        ],
        "description": "Endpoint para criar uma cobrança imediata, neste caso, o txid deve ser definido pelo PSP.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CobBody"
        },
        "responses": {
          "201": {
            "description": "Cobrança imediata criada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobGerada"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse1"
                  },
                  "retorno2": {
                    "$ref": "#/components/examples/cobResponse5"
                  },
                  "retorno3": {
                    "$ref": "#/components/examples/cobResponse6"
                  },
                  "retorno4": {
                    "$ref": "#/components/examples/cobResponse7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaCobExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "name": "cpf",
            "in": "query",
            "x-refersTo": "Dado Pessoal (DP)",
            "schema": {
              "x-refersTo": [
                "Pessoa Natural",
                "Titular de DP",
                "Titular Identificável",
                "Dado Pessoal (DP)"
              ],
              "type": "string",
              "title": "CPF",
              "pattern": "/^\\d{11}$/",
              "description": "Filtro pelo CPF do devedor. Não pode ser utilizado ao mesmo tempo que o CNPJ."
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "schema": {
              "x-refersTo": [
                "Pessoa Jurídica"
              ],
              "type": "string",
              "title": "CNPJ",
              "pattern": "/^\\d{14}$/",
              "description": "Filtro pelo CNPJ do devedor. Não pode ser utilizado ao mesmo tempo que o CPF."
            }
          },
          {
            "name": "locationPresente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Status do registro da cobrança",
              "description": "Filtro pelo status da cobrança."
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "Cob"
        ],
        "summary": "Consultar lista de cobranças imediatas.",
        "security": [
          {
            "OAuth2": [
              "cob.read"
            ]
          }
        ],
        "description": "Endpoint para consultar cobranças imediatas através de parâmetros como início, fim, cpf, cnpj e status.",
        "responses": {
          "200": {
            "description": "Lista de cobranças imediatas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobsConsultadas"
                },
                "examples": {
                  "getCobs1": {
                    "$ref": "#/components/examples/getCobs1"
                  },
                  "getCobs2": {
                    "$ref": "#/components/examples/getCobs2"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/cobv/{txid}": {
      "parameters": [
        {
          "name": "txid",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/TxId"
          }
        }
      ],
      "put": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Coleta",
          "Armazenamento"
        ],
        "tags": [
          "CobV"
        ],
        "summary": "Criar cobrança com vencimento.",
        "security": [
          {
            "OAuth2": [
              "cobv.write"
            ]
          }
        ],
        "description": "Endpoint para criar uma cobrança com vencimento.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CobVBody"
        },
        "responses": {
          "201": {
            "description": "Cobrança com vencimento criada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobVGerada"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaCobVExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "patch": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "tags": [
          "CobV"
        ],
        "summary": "Revisar cobrança com vencimento.",
        "security": [
          {
            "OAuth2": [
              "cobv.write"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CobVBodyRevisada"
        },
        "responses": {
          "200": {
            "description": "Cobrança com vencimento revisada. A revisão deve ser incrementada em 1.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobVGerada"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/OperacaoInvalidaCobVExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "parameters": [
          {
            "name": "revisao",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Revisao"
            }
          }
        ],
        "tags": [
          "CobV"
        ],
        "summary": "Consultar cobrança com vencimento.",
        "security": [
          {
            "OAuth2": [
              "cobv.read"
            ]
          }
        ],
        "description": "Endpoint para consultar uma cobrança com vencimento através de um determinado txid.",
        "responses": {
          "200": {
            "description": "Dados da cobrança com vencimento.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobVCompleta"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobResponse4"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/cobv": {
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "name": "cpf",
            "in": "query",
            "x-refersTo": "Dado Pessoal (DP)",
            "schema": {
              "x-refersTo": [
                "Pessoa Natural",
                "Titular de DP",
                "Titular Identificável",
                "Dado Pessoal (DP)"
              ],
              "type": "string",
              "title": "CPF",
              "pattern": "/^\\d{11}$/",
              "description": "Filtro pelo CPF do devedor. Não pode ser utilizado ao mesmo tempo que o CNPJ."
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "schema": {
              "x-refersTo": [
                "Pessoa Jurídica"
              ],
              "type": "string",
              "title": "CNPJ",
              "pattern": "/^\\d{14}$/",
              "description": "Filtro pelo CNPJ do devedor. Não pode ser utilizado ao mesmo tempo que o CPF."
            }
          },
          {
            "name": "locationPresente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "Status do registro da cobrança",
              "description": "Filtro pelo status da cobrança."
            }
          },
          {
            "name": "loteCobVId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "title": "Id do lote de cobrança com vencimento",
              "description": "Id do lote de cobrança com vencimento."
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "CobV"
        ],
        "summary": "Consultar lista de cobranças com vencimento.",
        "security": [
          {
            "OAuth2": [
              "cobv.read"
            ]
          }
        ],
        "description": "Endpoint para consultar cobranças com vencimento através de parâmetros como início, fim, cpf, cnpj e status.",
        "responses": {
          "200": {
            "description": "Lista de cobranças com vencimento.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CobsVConsultadas"
                },
                "examples": {
                  "getCobs1": {
                    "$ref": "#/components/examples/getCobsV1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/lotecobv/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "title": "Id do lote de cobranças com vencimento"
          }
        }
      ],
      "put": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Coleta",
          "Armazenamento"
        ],
        "tags": [
          "LoteCobV"
        ],
        "summary": "Criar/Alterar lote de cobranças com vencimento.",
        "security": [
          {
            "OAuth2": [
              "lotecobv.write"
            ]
          }
        ],
        "description": "Endpoint utilizado para criar ou alterar um lote de cobranças com vencimento. Para o caso de uso de alteração de cobranças, o array a ser atribuído na requisicão deve ser composto pelas exatas requisições de criação de cobranças que constaram no array atribuído na requisição originária.",
        "requestBody": {
          "$ref": "#/components/requestBodies/LoteCobVBody"
        },
        "responses": {
          "202": {
            "description": "Lote de cobranças com vencimento solicitado para criação."
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaLoteCobVExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "patch": {
        "tags": [
          "LoteCobV"
        ],
        "summary": "Utilizado para revisar cobranças específicas dentro de um lote de cobranças com vencimento.",
        "security": [
          {
            "OAuth2": [
              "lotecobv.write"
            ]
          }
        ],
        "description": "Endpoint utilizado para revisar cobranças específicas dentro de um lote de cobranças com vencimento. A diferença deste endpoint para o endpoint PUT correlato é que este endpoint admite um array `cobsv` com menos solicitações de criação ou alteração de cobranças do que o array atribuído na requisição originária do lote. Não se pode, entretanto, utilizar esse endpoint para agregar ou remover solicitações de alteração ou criação de cobranças conforme constam na requisição originária do lote.",
        "requestBody": {
          "$ref": "#/components/requestBodies/LoteCobVBodyRevisado"
        },
        "responses": {
          "202": {
            "description": "Solicitação de revisão do Lote de cobranças encaminhada para processamento."
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/OperacaoInvalidaCobVExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "tags": [
          "LoteCobV"
        ],
        "summary": "Consultar um lote específico de cobranças com vencimento.",
        "security": [
          {
            "OAuth2": [
              "lotecobv.read"
            ]
          }
        ],
        "description": "Endpoint para consultar um lote de cobranças com vencimento.",
        "responses": {
          "200": {
            "description": "Lote de cobranças com vencimento.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteCobVConsultado"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/loteCobVResponse1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/lotecobv": {
      "get": {
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "LoteCobV"
        ],
        "summary": "Consultar lotes de cobranças com vencimento.",
        "security": [
          {
            "OAuth2": [
              "lotecobv.read"
            ]
          }
        ],
        "description": "Endpoint para consultar lista de lotes de cobranças com vencimento.",
        "responses": {
          "200": {
            "description": "Lotes de cobranças com vencimento.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotesCobVConsultados"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/getLotesCobsV"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/loc": {
      "post": {
        "tags": [
          "PayloadLocation"
        ],
        "summary": "Criar location do payload.",
        "security": [
          {
            "OAuth2": [
              "payloadlocation.write"
            ]
          }
        ],
        "description": "Criar location do payload",
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLocationBody"
        },
        "responses": {
          "201": {
            "description": "Dados da location do Payload.",
            "headers": {
              "location": {
                "schema": {
                  "type": "string",
                  "format": "uri",
                  "title": "Identificador da location criada.",
                  "description": "Identificador da location criada.",
                  "example": "pix.example.com/api/loc/1234567"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayloadLocation"
                },
                "examples": {
                  "getPayloadLocation1": {
                    "$ref": "#/components/examples/payloadLocationResponse5"
                  },
                  "getPayloadLocation2": {
                    "$ref": "#/components/examples/payloadLocationResponse6"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaLocationExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "name": "txIdPresente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tipoCob",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "cob",
                "cobv"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "PayloadLocation"
        ],
        "summary": "Consultar locations cadastradas.",
        "security": [
          {
            "OAuth2": [
              "payloadlocation.read"
            ]
          }
        ],
        "description": "Endpoint para consultar locations cadastradas",
        "responses": {
          "200": {
            "description": "lista dos locations cadastrados de acordo com o critério de busca.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayloadLocationConsultadas"
                },
                "examples": {
                  "getCobs1": {
                    "$ref": "#/components/examples/getPayloadLocation1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/loc/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "title": "Id da location cadastrada para servir um payload"
          }
        }
      ],
      "get": {
        "tags": [
          "PayloadLocation"
        ],
        "summary": "Recuperar location do payload.",
        "security": [
          {
            "OAuth2": [
              "payloadlocation.read"
            ]
          }
        ],
        "description": "Recupera a location do payload.",
        "responses": {
          "200": {
            "description": "Dados da location do Payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayloadLocationCompleta"
                },
                "examples": {
                  "getPayloadLocation1": {
                    "$ref": "#/components/examples/payloadLocationResponse1"
                  },
                  "getPayloadLocation2": {
                    "$ref": "#/components/examples/payloadLocationResponse2"
                  },
                  "getPayloadLocation3": {
                    "$ref": "#/components/examples/payloadLocationResponse3"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/loc/{id}/txid": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "title": "Id da location cadastrada para servir um payload"
          }
        }
      ],
      "delete": {
        "tags": [
          "PayloadLocation"
        ],
        "summary": "Desvincular uma cobrança de uma location.",
        "description": "Endpoint utilizado para desvincular uma cobrança de uma location. Se executado com sucesso, a entidade `loc` não apresentará mais um txid, se apresentava anteriormente à chamada. Adicionalmente, a entidade `cob` ou `cobv` associada ao txid desvinculado também passará a não mais apresentar um _location_. Esta operação não altera o `status` da `cob` ou `cobv` em questão.",
        "security": [
          {
            "OAuth2": [
              "payloadlocation.write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "cobrança representada pelo txid informado desvinculada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayloadLocation"
                },
                "examples": {
                  "getPayloadLocation1": {
                    "$ref": "#/components/examples/payloadLocationResponse4"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/pix/{e2eid}": {
      "parameters": [
        {
          "name": "e2eid",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EndToEndId"
          }
        }
      ],
      "get": {
        "tags": [
          "Pix"
        ],
        "summary": "Consultar Pix.",
        "security": [
          {
            "OAuth2": [
              "pix.read"
            ]
          }
        ],
        "description": "Endpoint para consultar um Pix através de um e2eid.",
        "responses": {
          "200": {
            "description": "Dados do Pix efetuado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pix"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/pixResponse1"
                  },
                  "retorno2": {
                    "$ref": "#/components/examples/pixResponse2"
                  },
                  "retorno3": {
                    "$ref": "#/components/examples/pixResponse3"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/pix": {
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "name": "txid",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TxId"
                },
                {
                  "pattern": "[a-zA-Z0-9]{1,35}"
                }
              ]
            }
          },
          {
            "name": "txIdPresente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "devolucaoPresente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cpf",
            "in": "query",
            "x-refersTo": "Dado Pessoal (DP)",
            "schema": {
              "x-refersTo": [
                "Pessoa Natural",
                "Titular de DP",
                "Titular Identificável",
                "Dado Pessoal (DP)"
              ],
              "type": "string",
              "title": "CPF",
              "pattern": "/^\\d{11}$/",
              "description": "Filtro pelo CPF do pagador. Não pode ser utilizado ao mesmo tempo que o CNPJ."
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "schema": {
              "x-refersTo": [
                "Pessoa Jurídica"
              ],
              "type": "string",
              "title": "CNPJ",
              "pattern": "/^\\d{14}$/",
              "description": "Filtro pelo CNPJ do pagador. Não pode ser utilizado ao mesmo tempo que o CPF."
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "Pix"
        ],
        "summary": "Consultar Pix recebidos.",
        "security": [
          {
            "OAuth2": [
              "pix.read"
            ]
          }
        ],
        "description": "Endpoint para consultar Pix recebidos",
        "responses": {
          "200": {
            "description": "lista dos Pix recebidos de acordo com o critério de busca.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixConsultados"
                },
                "examples": {
                  "getCobs1": {
                    "$ref": "#/components/examples/getPix1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/pix/{e2eid}/devolucao/{id}": {
      "parameters": [
        {
          "name": "e2eid",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EndToEndId"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/DevolucaoId"
          }
        }
      ],
      "put": {
        "tags": [
          "Pix"
        ],
        "summary": "Solicitar devolução.",
        "security": [
          {
            "OAuth2": [
              "pix.write"
            ]
          }
        ],
        "description": "Endpoint para solicitar uma devolução através de um e2eid do Pix e do ID da devolução. O motivo que será atribuído à PACS.004 será \"MD06\" ou \"SL02\" de acordo com a aba RTReason da PACS.004 que consta no Catálogo de Mensagens do Pix a depender da `natureza` da devolução (Vide a descrição deste campo).",
        "requestBody": {
          "$ref": "#/components/requestBodies/DevolucaoBody"
        },
        "responses": {
          "201": {
            "description": "Dados da devolução.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devolucao"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/devolucaoResponse1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaDevolucaoExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "get": {
        "tags": [
          "Pix"
        ],
        "summary": "Consultar devolução.",
        "security": [
          {
            "OAuth2": [
              "pix.read"
            ]
          }
        ],
        "description": "Endpoint para consultar uma devolução através de um End To End ID do Pix e do ID da devolução",
        "responses": {
          "200": {
            "description": "Dados da devolução.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devolucao"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/devolucaoResponse1"
                  },
                  "retorno2": {
                    "$ref": "#/components/examples/devolucaoResponse2"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/{pixUrlAccessToken}": {
      "parameters": [
        {
          "name": "pixUrlAccessToken",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "tags": [
          "CobPayload"
        ],
        "servers": [
          {
            "url": "https://{fdqnPSPRecebedor}/{endpointOpcional}",
            "variables": {
              "fdqnPSPRecebedor": {
                "default": "example.com",
                "description": "Endpoint base para que os usuários devedores possam acessar o payload JSON que representa a cobrança imediata."
              }
            }
          }
        ],
        "summary": "Recuperar o payload JSON que representa a cobrança imediata.",
        "description": "Endpoint (location) que serve um payload que representa uma cobrança imediata. No momento que o usuário devedor efetua a leitura de um QR Code dinâmico gerado pelo recebedor, esta URL será acessada e seu conteúdo consiste em uma estrutura JWS. As informações sobre a segurança no acesso às urls encontram-se no Manual de Segurança do Pix disponível em nesse __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.",
        "security": [],
        "responses": {
          "200": {
            "description": "O retorno desse endpoint é um objeto que apresenta estrutura JWS, conforme especificado no manual de segurança.",
            "content": {
              "application/jose": {
                "schema": {
                  "$ref": "#/components/schemas/CobPayload"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobPayload1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaCobPayloadExample1"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/cobv/{pixUrlAccessToken}": {
      "parameters": [
        {
          "name": "pixUrlAccessToken",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "codMun",
          "in": "query",
          "description": "Código baseado na Tabela de Códigos de Municípios do __[IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)__ que apresenta a lista dos municípios brasileiros associados a um código composto de 7 dígitos, sendo os dois primeiros referentes ao código da Unidade da Federação.",
          "schema": {
            "type": "string",
            "pattern": "/^\\d{7}$/",
            "title": "Código do município"
          }
        },
        {
          "name": "DPP",
          "in": "query",
          "description": "Data de pagamento pretendida. Trata-se de uma data, no formato `YYYY-MM-DD`, segundo ISO 8601.",
          "schema": {
            "type": "string",
            "format": "date",
            "example": "2021-04-01"
          }
        }
      ],
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "tags": [
          "CobPayload"
        ],
        "servers": [
          {
            "url": "https://{fdqnPSPRecebedor}/{endpointOpcional}",
            "variables": {
              "fdqnPSPRecebedor": {
                "default": "example.com",
                "description": "Endpoint base para que os usuários devedores possam acessar o payload JSON que representa a cobrança com vencimento."
              }
            }
          }
        ],
        "summary": "Recuperar o payload JSON que representa a cobrança com vencimento.",
        "description": "Endpoint (location) que serve um payload que representa uma cobrança com vencimento. No momento que o usuário devedor efetua a leitura de um QR Code dinâmico gerado pelo recebedor, esta URL será acessada e seu conteúdo consiste em uma estrutura JWS. As informações sobre a segurança no acesso às urls encontram-se no Manual de Segurança do Pix disponível em nesse __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.",
        "security": [],
        "responses": {
          "200": {
            "description": "O retorno desse endpoint é um objeto que apresenta estrutura JWS, conforme especificado no manual de segurança.",
            "content": {
              "application/jose": {
                "schema": {
                  "$ref": "#/components/schemas/CobVPayload"
                },
                "examples": {
                  "retorno1": {
                    "$ref": "#/components/examples/cobPayload2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaCobPayloadExample1"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/webhook/{chave}": {
      "parameters": [
        {
          "name": "chave",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "title": "Chave DICT do recebedor",
            "maxLength": 77
          }
        }
      ],
      "put": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Armazenamento"
        ],
        "tags": [
          "Webhook"
        ],
        "summary": "Configurar o Webhook Pix.",
        "description": "Endpoint para configuração do serviço de notificações acerca de Pix recebidos. Somente Pix associados a um txid serão notificados.",
        "security": [
          {
            "OAuth2": [
              "webhook.write"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/WebhookConfigBody"
        },
        "responses": {
          "200": {
            "description": "Webhook para notificações acerca de Pix recebidos associados a um txid."
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/RequisicaoInvalidaWebhookExample1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        },
        "callbacks": {
          "listaPix": {
            "{$request.body#/webhookUrl}/pix": {
              "post": {
                "description": "O callback deve ser acionado sempre que um ou mais Pix associados a um txid forem recebidos pelo usuário recebedor e desde que a chave associada ao Pix em questão esteja associada a um webhook cadastrado. O callback também deve ser acionado sempre que uma devolução associada a um Pix associado a um txid atinja um status final: `DEVOLVIDO` ou `NAO_REALIZADO`.",
                "security": [],
                "requestBody": {
                  "$ref": "#/components/requestBodies/WebhookPixBody"
                },
                "responses": {
                  "200": {
                    "description": "Notificação recebida com sucesso"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta"
        ],
        "tags": [
          "Webhook"
        ],
        "summary": "Exibir informações acerca do Webhook Pix.",
        "description": "Endpoint para recuperação de informações sobre o Webhook Pix.",
        "security": [
          {
            "OAuth2": [
              "webhook.read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do webhook.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookCompleto"
                },
                "examples": {
                  "exemplo1": {
                    "$ref": "#/components/examples/webhookResponse1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      },
      "delete": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Exclusão"
        ],
        "tags": [
          "Webhook"
        ],
        "summary": "Cancelar o webhook Pix.",
        "description": "Endpoint para cancelamento do webhook. Não é a única forma pela qual um webhook pode ser removido. O PSP recebedor está livre para remover unilateralmente um webhook que esteja associado a uma chave que não pertence mais a este usuário recebedor.",
        "security": [
          {
            "OAuth2": [
              "webhook.write"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook para notificações Pix foi cancelado."
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "404": {
            "$ref": "#/components/responses/NaoEncontrado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    },
    "/webhook": {
      "get": {
        "x-operationType": [
          "Operação de TDP",
          "TDP Autorizado",
          "Consulta",
          "Disponibilização"
        ],
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Fim"
            }
          },
          {
            "$ref": "#/components/parameters/paginaAtual"
          },
          {
            "$ref": "#/components/parameters/itensPorPagina"
          }
        ],
        "tags": [
          "Webhook"
        ],
        "summary": "Consultar webhooks cadastrados.",
        "security": [
          {
            "OAuth2": [
              "webhook.read"
            ]
          }
        ],
        "description": "Endpoint para consultar Webhooks cadastrados",
        "responses": {
          "200": {
            "description": "lista dos locations cadastrados de acordo com o critério de busca.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksConsultados"
                },
                "examples": {
                  "getCobs1": {
                    "$ref": "#/components/examples/getWebhook1"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AcessoNegado"
          },
          "503": {
            "$ref": "#/components/responses/ServicoIndisponivel"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://pix.example.com/oauth/token",
            "scopes": {
              "cob.write": "Permissão para alteração de cobranças imediatas",
              "cob.read": "Permissão para consulta de cobranças imediatas",
              "cobv.write": "Permissão para alteração de cobranças com vencimento",
              "cobv.read": "Permissão para consulta de cobranças com vencimento",
              "lotecobv.write": "Permissão para alteração de lotes de cobranças com vencimento",
              "lotecobv.read": "Permissão para consulta de lotes de cobranças com vencimento",
              "pix.write": "Permissão para alteração de Pix",
              "pix.read": "Permissão para consulta de Pix",
              "webhook.read": "Permissão para consulta do webhook",
              "webhook.write": "Permissão para alteração do webhook",
              "payloadlocation.write": "Permissão para alteração de payloads",
              "payloadlocation.read": "Permissão para consulta de payloads"
            }
          }
        }
      }
    },
    "examples": {
      "cobBody1": {
        "summary": "Exemplo de criação de cobrança com vencimento 1",
        "value": {
          "calendario": {
            "dataDeVencimento": "2020-12-31",
            "validadeAposVencimento": 30
          },
          "loc": {
            "id": 789
          },
          "devedor": {
            "logradouro": "Alameda Souza, Numero 80, Bairro Braz",
            "cidade": "Recife",
            "uf": "PE",
            "cep": "70011750",
            "cpf": "12345678909",
            "nome": "Francisco da Silva"
          },
          "valor": {
            "original": "123.45",
            "multa": {
              "modalidade": "2",
              "valorPerc": "15.00"
            },
            "juros": {
              "modalidade": "2",
              "valorPerc": "2.00"
            },
            "desconto": {
              "modalidade": "1",
              "descontoDataFixa": [
                {
                  "data": "2020-11-30",
                  "valorPerc": "30.00"
                }
              ]
            }
          },
          "chave": "5f84a4c5-c5cb-4599-9f13-7eb4d419dacc",
          "solicitacaoPagador": "Cobrança dos serviços prestados."
        }
      },
      "cobBody2": {
        "summary": "Exemplo de criação de cobrança imediata 1",
        "value": {
          "calendario": {
            "expiracao": 3600
          },
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "37.00",
            "modalidadeAlteracao": 1
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906",
          "solicitacaoPagador": "Serviço realizado.",
          "infoAdicionais": [
            {
              "nome": "Campo 1",
              "valor": "Informação Adicional1 do PSP-Recebedor"
            },
            {
              "nome": "Campo 2",
              "valor": "Informação Adicional2 do PSP-Recebedor"
            }
          ]
        }
      },
      "cobBody3": {
        "summary": "Exemplo de revisão de cobrança 1",
        "value": {
          "loc": {
            "id": 7768
          },
          "devedor": {
            "cpf": "12345678909",
            "nome": "Francisco da Silva"
          },
          "valor": {
            "original": "123.45"
          },
          "solicitacaoPagador": "Cobrança dos serviços prestados."
        }
      },
      "cobBody4": {
        "summary": "Exemplo de revisão de cobrança 2",
        "value": {
          "valor": {
            "original": "567.89"
          },
          "solicitacaoPagador": "Informar cartão fidelidade"
        }
      },
      "cobBody5": {
        "summary": "Exemplo de revisão de cobrança 3",
        "value": {
          "status": "REMOVIDA_PELO_USUARIO_RECEBEDOR"
        }
      },
      "cobBody6": {
        "summary": "Exemplo de criação de cobrança imediata com Saque Pix",
        "value": {
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "0.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "saque": {
                "valor": "5.00",
                "modalidadeAlteracao": 0,
                "modalidadeAgente": "AGPSS",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "cobBody7": {
        "summary": "Exemplo de revisão de cobrança com vencimento 1",
        "value": {
          "loc": {
            "id": 789
          },
          "devedor": {
            "logradouro": "Alameda Souza, Numero 80, Bairro Braz",
            "cidade": "Recife",
            "uf": "PE",
            "cep": "70011750",
            "cpf": "12345678909",
            "nome": "Francisco da Silva"
          },
          "valor": {
            "original": "123.45"
          },
          "solicitacaoPagador": "Cobrança dos serviços prestados."
        }
      },
      "cobBody8": {
        "summary": "Exemplo de criação de cobrança imediata com Saque Pix 2",
        "value": {
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "0.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "saque": {
                "valor": "20.00",
                "modalidadeAlteracao": 1,
                "modalidadeAgente": "AGPSS",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "cobBody9": {
        "summary": "Exemplo de criação de cobrança imediata com Saque Pix 3",
        "value": {
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "10.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "troco": {
                "valor": "0.00",
                "modalidadeAlteracao": 1,
                "modalidadeAgente": "AGTEC",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "loteCobVBody1": {
        "summary": "Exemplo de criação de lote de cobranças com vencimento 1",
        "value": {
          "descricao": "Cobranças dos alunos do turno vespertino",
          "cobsv": [
            {
              "calendario": {
                "dataDeVencimento": "2020-12-31",
                "validadeAposVencimento": 30
              },
              "txid": "fb2761260e554ad593c7226beb5cb650",
              "loc": {
                "id": 789
              },
              "devedor": {
                "logradouro": "Alameda Souza, Numero 80, Bairro Braz",
                "cidade": "Recife",
                "uf": "PE",
                "cep": "70011750",
                "cpf": "08577095428",
                "nome": "João Souza"
              },
              "valor": {
                "original": "100.00"
              },
              "chave": "7c084cd4-54af-4172-a516-a7d1a12b75cc",
              "solicitacaoPagador": "Informar matrícula"
            },
            {
              "calendario": {
                "dataDeVencimento": "2020-12-31",
                "validadeAposVencimento": 30
              },
              "txid": "7978c0c97ea847e78e8849634473c1f1",
              "loc": {
                "id": 57221
              },
              "devedor": {
                "logradouro": "Rua 15, Numero 1, Bairro Campo Grande",
                "cidade": "Recife",
                "uf": "PE",
                "cep": "70055751",
                "cpf": "15311295449",
                "nome": "Manoel Silva"
              },
              "valor": {
                "original": "100.00"
              },
              "chave": "7c084cd4-54af-4172-a516-a7d1a12b75cc",
              "solicitacaoPagador": "Informar matrícula"
            }
          ]
        }
      },
      "loteCobVBodyRevisado1": {
        "summary": "Exemplo de revisão de lote de cobranças com vencimento 1",
        "value": {
          "cobsv": [
            {
              "calendario": {
                "dataDeVencimento": "2020-01-10"
              },
              "txid": "fb2761260e554ad593c7226beb5cb650",
              "valor": {
                "original": "110.00"
              }
            },
            {
              "calendario": {
                "dataDeVencimento": "2020-01-10"
              },
              "txid": "7978c0c97ea847e78e8849634473c1f1",
              "valor": {
                "original": "110.00"
              }
            }
          ]
        }
      },
      "cobResponse1": {
        "summary": "Exemplo de cobrança imediata 1",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "7978c0c97ea847e78e8849634473c1f1",
          "revisao": 0,
          "loc": {
            "id": 789,
            "location": "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25",
            "tipoCob": "cob"
          },
          "location": "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25",
          "status": "ATIVA",
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "37.00",
            "modalidadeAlteracao": 1
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906",
          "solicitacaoPagador": "Serviço realizado.",
          "infoAdicionais": [
            {
              "nome": "Campo 1",
              "valor": "Informação Adicional1 do PSP-Recebedor"
            },
            {
              "nome": "Campo 2",
              "valor": "Informação Adicional2 do PSP-Recebedor"
            }
          ]
        }
      },
      "cobResponse2": {
        "summary": "Exemplo de cobrança imediata 2",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "655dfdb1a4514b8fbb58254b958913fb",
          "revisao": 1,
          "loc": {
            "id": 567,
            "location": "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403"
          },
          "location": "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403",
          "status": "CONCLUIDA",
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "100.00",
            "modalidadeAlteracao": 0
          },
          "chave": "40a0932d-1918-4eee-845d-35a2da1690dc",
          "solicitacaoPagador": "Informar cartão fidelidade",
          "pix": [
            {
              "endToEndId": "E12345678202009091221kkkkkkkkkkk",
              "txid": "655dfdb1a4514b8fbb58254b958913fb",
              "valor": "110.00",
              "horario": "2020-09-09T20:15:00.358Z",
              "infoPagador": "0123456789",
              "devolucoes": [
                {
                  "id": "123ABC",
                  "rtrId": "Dxxxxxxxx202009091221kkkkkkkkkkk",
                  "valor": "10.00",
                  "horario": {
                    "solicitacao": "2020-09-09T20:15:00.358Z"
                  },
                  "status": "EM_PROCESSAMENTO"
                }
              ]
            }
          ]
        }
      },
      "cobResponse3": {
        "summary": "Exemplo de cobrança revisada 1",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "7978c0c97ea847e78e8849634473c1f1",
          "revisao": 1,
          "loc": {
            "id": 7768,
            "location": "pix.example.com/qr/b1/9d36b84fc70b478fb95c12729b90ca25",
            "tipoCob": "cob"
          },
          "location": "pix.example.com/qr/v1/9d36b84fc70b478fb95c12729b90ca25",
          "status": "ATIVA",
          "devedor": {
            "cpf": "12345678909",
            "nome": "Francisco da Silva"
          },
          "valor": {
            "original": "123.45",
            "modalidadeAlteracao": 0
          },
          "chave": "a1f4102e-a446-4a57-bcce-6fa48899c1d1",
          "solicitacaoPagador": "Cobrança dos serviços prestados."
        }
      },
      "cobResponse4": {
        "summary": "Exemplo de cobrança com vencimento 1",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "dataDeVencimento": "2020-12-31",
            "validadeAposVencimento": 30
          },
          "txid": "7978c0c97ea847e78e8849634473c1f1",
          "revisao": 0,
          "loc": {
            "id": 789,
            "location": "pix.example.com/qr/c2/cobv/9d36b84fc70b478fb95c12729b90ca25",
            "tipoCob": "cobv"
          },
          "status": "ATIVA",
          "devedor": {
            "logradouro": "Alameda Souza, Numero 80, Bairro Braz",
            "cidade": "Recife",
            "uf": "PE",
            "cep": "70011750",
            "cpf": "12345678909",
            "nome": "Francisco da Silva"
          },
          "recebedor": {
            "logradouro": "Rua 15 Numero 1200, Bairro São Luiz",
            "cidade": "São Paulo",
            "uf": "SP",
            "cep": "70800100",
            "cnpj": "56989000019533",
            "nome": "Empresa de Logística SA"
          },
          "valor": {
            "original": "123.45"
          },
          "chave": "5f84a4c5-c5cb-4599-9f13-7eb4d419dacc",
          "solicitacaoPagador": "Cobrança dos serviços prestados."
        }
      },
      "cobResponse5": {
        "summary": "Exemplo de cobrança imediata com Saque Pix",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "33beb661beda44a8928fef47dbeb2dc5",
          "revisao": 0,
          "loc": {
            "id": 1004,
            "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
            "tipoCob": "cob"
          },
          "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
          "status": "ATIVA",
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "0.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "saque": {
                "valor": "5.00",
                "modalidadeAlteracao": 0,
                "modalidadeAgente": "AGPSS",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "cobResponse6": {
        "summary": "Exemplo de cobrança imediata com Saque Pix 2",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "33beb661beda44a8928fef47dbeb2dc5",
          "revisao": 0,
          "loc": {
            "id": 1004,
            "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
            "tipoCob": "cob"
          },
          "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
          "status": "ATIVA",
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "0.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "saque": {
                "valor": "20.00",
                "modalidadeAlteracao": 1,
                "modalidadeAgente": "AGPSS",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "cobResponse7": {
        "summary": "Exemplo de cobrança imediata com Saque Pix 3",
        "value": {
          "calendario": {
            "criacao": "2020-09-09T20:15:00.358Z",
            "expiracao": 3600
          },
          "txid": "33beb661beda44a8928fef47dbeb2dc5",
          "revisao": 0,
          "loc": {
            "id": 1004,
            "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
            "tipoCob": "cob"
          },
          "location": "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213",
          "status": "ATIVA",
          "devedor": {
            "cnpj": "12345678000195",
            "nome": "Empresa de Serviços SA"
          },
          "valor": {
            "original": "10.00",
            "modalidadeAlteracao": 0,
            "retirada": {
              "troco": {
                "valor": "0.00",
                "modalidadeAlteracao": 1,
                "modalidadeAgente": "AGTEC",
                "prestadorDoServicoDeSaque": "12345678"
              }
            }
          },
          "chave": "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        }
      },
      "loteCobVResponse1": {
        "summary": "Exemplo de lote de cobranças com vencimento 1",
        "value": {
          "descricao": "Cobranças dos alunos do turno vespertino",
          "criacao": "2020-11-01T20:15:00.358Z",
          "cobsv": [
            {
              "criacao": "2020-11-01T20:15:00.358Z",
              "txid": "fb2761260e554ad593c7226beb5cb650",
              "status": "CRIADA"
            },
            {
              "txid": "7978c0c97ea847e78e8849634473c1f1",
              "status": "NEGADA",
              "problema": {
                "type": "https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida",
                "title": "Cobrança inválida.",
                "status": 400,
                "detail": "A requisição que busca alterar ou criar uma cobrança com vencimento não respeita o _schema_ ou está semanticamente errada.",
                "violacoes": [
                  {
                    "razao": "O objeto cobv.devedor não respeita o _schema_.",
                    "propriedade": "cobv.devedor"
                  }
                ]
              }
            }
          ]
        }
      },
      "loteCobVResponse2": {
        "summary": "Exemplo de lote de cobranças com vencimento 2",
        "value": {
          "descricao": "Cobranças dos assinantes anuais",
          "criacao": "2020-11-17T20:00:00.358Z",
          "cobsv": [
            {
              "criacao": "2020-11-17T20:00:00.358Z",
              "txid": "06601eaa3822423fbe897f613b983e01",
              "status": "CRIADA"
            },
            {
              "criacao": "2020-11-17T20:00:00.358Z",
              "txid": "4e07059760d54cf493de6e7f1fbfad9a",
              "status": "CRIADA"
            }
          ]
        }
      },
      "payloadLocationBody1": {
        "summary": "Exemplo de Payload Location 1",
        "value": {
          "tipoCob": "cob"
        }
      },
      "payloadLocationBody2": {
        "summary": "Exemplo de Payload Location 2",
        "value": {
          "tipoCob": "cobv"
        }
      },
      "payloadLocationResponse1": {
        "summary": "Exemplo de Payload Location 1",
        "value": {
          "id": 7716,
          "txid": "fda9460fe04e4f129b72863ae57ee22f",
          "location": "pix.example.com/qr/v2/cobv/2353c790eefb11eaadc10242ac120002",
          "tipoCob": "cobv",
          "criacao": "2020-03-11T21:19:51.013Z"
        }
      },
      "payloadLocationResponse2": {
        "summary": "Exemplo de Payload Location 2",
        "value": {
          "id": 856,
          "txid": "31e08604f9ce459bb59672332af8d672",
          "location": "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c",
          "tipoCob": "cobv",
          "criacao": "2020-02-10T19:22:52.013Z"
        }
      },
      "payloadLocationResponse3": {
        "summary": "Exemplo de Payload Location 3",
        "value": {
          "id": 2316,
          "txid": "eb9d87f36fca4c92b7d5ec48e2ee3853",
          "location": "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466",
          "tipoCob": "cob",
          "criacao": "2020-05-31T19:39:54.013Z"
        }
      },
      "payloadLocationResponse4": {
        "summary": "Exemplo de Payload Location 3",
        "value": {
          "id": 2316,
          "location": "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466",
          "tipoCob": "cob",
          "criacao": "2020-05-31T19:39:54.013Z"
        }
      },
      "payloadLocationResponse5": {
        "summary": "Exemplo de Payload Location 1",
        "value": {
          "id": 7716,
          "location": "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002",
          "tipoCob": "cob",
          "criacao": "2020-03-11T21:19:51.013Z"
        }
      },
      "payloadLocationResponse6": {
        "summary": "Exemplo de Payload Location 2",
        "value": {
          "id": 856,
          "location": "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c",
          "tipoCob": "cobv",
          "criacao": "2020-02-10T19:22:52.013Z"
        }
      },
      "pixResponse1": {
        "summary": "Exemplo de Pix 1",
        "value": {
          "endToEndId": "E12345678202009091221abcdef12345",
          "txid": "cd1fe328c875481285a6f233ae41b662",
          "valor": "100.00",
          "horario": "2020-09-10T13:03:33.902Z",
          "infoPagador": "Reforma da casa",
          "devolucoes": [
            {
              "id": "000AAA111",
              "rtrId": "D12345678202009091000abcde123456",
              "valor": "11.00",
              "horario": {
                "solicitacao": "2020-09-10T13:03:33.902Z"
              },
              "status": "EM_PROCESSAMENTO"
            }
          ]
        }
      },
      "pixResponse2": {
        "summary": "Exemplo de Pix 2",
        "value": {
          "endToEndId": "E12345678202009091221ghijk78901234",
          "txid": "5b933948f3224266b1050ac54319e775",
          "valor": "200.00",
          "horario": "2020-09-10T13:03:33.902Z",
          "infoPagador": "Revisão do carro"
        }
      },
      "pixResponse3": {
        "summary": "Exemplo de Pix com Saque",
        "value": {
          "endToEndId": "E88631478202009091221ghijk78901234",
          "txid": "82433415910c47e5adb6ac3527cca160",
          "valor": "200.00",
          "componentesValor": {
            "original": {
              "valor": "180.00"
            },
            "saque": {
              "valor": "20.00",
              "modalidadeAgente": "AGPSS",
              "prestadorDeServicoDeSaque": "12345678"
            }
          },
          "horario": "2020-09-10T13:03:33.902Z",
          "infoPagador": "Saque Pix"
        }
      },
      "webhookBody1": {
        "summary": "Exemplo de configuração de Webhook 1",
        "value": {
          "webhookUrl": "https://pix.example.com/api/webhook/"
        }
      },
      "webhookResponse1": {
        "summary": "Exemplo de consulta de Webhook 1",
        "value": {
          "webhookUrl": "https://pix.example.com/api/webhook/",
          "chave": "40a0932d-1918-4eee-845d-35a2da1690dc",
          "criacao": "2020-11-11T10:15:00.358Z"
        }
      },
      "pixWebhook1": {
        "summary": "Exemplo de Webhook Pix 1",
        "value": {
          "endToEndId": "E12345678202009091221kkkkkkkkkkk",
          "txid": "c3e0e7a4e7f1469a9f782d3d4999343c",
          "valor": "110.00",
          "horario": "2020-09-09T20:15:00.358Z",
          "infoPagador": "0123456789",
          "devolucoes": {
            "id": "123ABC",
            "rtrId": "D12345678202009091221abcdf098765",
            "valor": "10.00",
            "horario": {
              "solicitacao": "2020-09-09T20:15:00.358Z"
            },
            "status": "EM_PROCESSAMENTO"
          }
        }
      },
      "pixWebhook2": {
        "summary": "Exemplo de Webhook Pix 2",
        "value": {
          "endToEndId": "E87654321202009091221dfghi123456",
          "txid": "971122d8f37211eaadc10242ac120002",
          "valor": "110.00",
          "horario": "2020-09-09T20:15:00.358Z",
          "infoPagador": "0123456789"
        }
      },
      "devolucaoResponse1": {
        "summary": "Exemplo de devolução 1",
        "value": {
          "id": "123456",
          "rtrId": "D12345678202009091000abcde123456",
          "valor": "7.89",
          "horario": {
            "solicitacao": "2020-09-11T15:25:59.411Z"
          },
          "status": "EM_PROCESSAMENTO"
        }
      },
      "devolucaoResponse2": {
        "summary": "Exemplo de devolução 2",
        "value": {
          "id": "502",
          "rtrId": "D12345678202011111000fghij789012",
          "valor": "20.00",
          "horario": {
            "solicitacao": "2020-09-11T15:25:59.411Z"
          },
          "status": "NAO_REALIZADO",
          "motivo": "Negado por timeout"
        }
      },
      "devolucaoSolicitada1": {
        "summary": "Exemplo de solicitação de devolução 1",
        "value": {
          "valor": "7.89"
        }
      },
      "cobPayload1": {
        "summary": "Exemplo de payload de cobrança imediata 1",
        "value": {
          "calendario": {
            "criacao": "2020-09-15T19:39:54.013Z",
            "apresentacao": "2020-04-01T18:00:00Z",
            "expiracao": 3600
          },
          "txid": "fc9a4366ff3d4964b5dbc6c91a8722d3",
          "revisao": 3,
          "status": "ATIVA",
          "valor": {
            "original": "500.00",
            "modalidadeAlteracao": 0
          },
          "chave": "7407c9c8-f78b-11ea-adc1-0242ac120002",
          "solicitacaoPagador": "Informar cartao fidelidade",
          "infoAdicionais": [
            {
              "nome": "quantidade",
              "valor": "2"
            }
          ]
        }
      },
      "cobPayload2": {
        "summary": "Exemplo de payload de cobrança com vencimento 1",
        "value": {
          "calendario": {
            "criacao": "2020-09-15T19:39:54.013Z",
            "apresentacao": "2020-04-01T18:00:00Z",
            "dataDeVencimento": "2020-12-31",
            "validadeAposVencimento": 30
          },
          "devedor": {
            "cnpj": "56989000019533",
            "nome": "Empresa de Alimentos SA"
          },
          "recebedor": {
            "logradouro": "Rua 20 Numero 70, Bairro Luz",
            "cidade": "Belo Horizonte",
            "uf": "MG",
            "cep": "55120750",
            "cnpj": "58900633120711",
            "nome": "Empresa de Abastecimento SA"
          },
          "txid": "fc9a4366ff3d4964b5dbc6c91a8722d3",
          "revisao": 3,
          "status": "ATIVA",
          "valor": {
            "original": "123.45",
            "multa": "15.00",
            "juros": "2.00",
            "final": "140.45"
          },
          "chave": "7407c9c8-f78b-11ea-adc1-0242ac120002",
          "solicitacaoPagador": "Informar cartao fidelidade",
          "infoAdicionais": [
            {
              "nome": "quantidade",
              "valor": "2"
            }
          ]
        }
      },
      "getCobs1": {
        "summary": "Exemplo de retorno da consulta de cobranças 1",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-02T10:00:00Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 2
            }
          },
          "cobs": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse1/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse2/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse5/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse6/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse7/value"
                }
              ]
            }
          ]
        }
      },
      "getCobs2": {
        "summary": "Exemplo de retorno da consulta de cobranças 2",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 1
            }
          },
          "cobs": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse1/value"
                }
              ]
            }
          ]
        }
      },
      "getCobsV1": {
        "summary": "Exemplo de retorno da consulta de cobranças com vencimento 1",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 1
            }
          },
          "cobs": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/cobResponse4/value"
                }
              ]
            }
          ]
        }
      },
      "getPix1": {
        "summary": "Exemplo de retorno da consulta de Pix 1",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 2
            }
          },
          "pix": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/pixResponse1/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/pixResponse2/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/pixResponse3/value"
                }
              ]
            }
          ]
        }
      },
      "getLotesCobsV": {
        "summary": "Exemplo de retorno da consulta de Pix 1",
        "value": {
          "parametros": {
            "inicio": "2020-01-01T00:00:00Z",
            "fim": "2020-12-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 2
            }
          },
          "lotes": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/loteCobVResponse1/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/loteCobVResponse2/value"
                }
              ]
            }
          ]
        }
      },
      "getPayloadLocation1": {
        "summary": "Exemplo de retorno da consulta de locations 1",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 3
            }
          },
          "loc": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/payloadLocationResponse1/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/payloadLocationResponse2/value"
                }
              ]
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/payloadLocationResponse3/value"
                }
              ]
            }
          ]
        }
      },
      "getWebhook1": {
        "summary": "Exemplo de retorno da consulta de Webhooks 1",
        "value": {
          "parametros": {
            "inicio": "2020-04-01T00:00:00Z",
            "fim": "2020-04-01T23:59:59Z",
            "paginacao": {
              "paginaAtual": 0,
              "itensPorPagina": 100,
              "quantidadeDePaginas": 1,
              "quantidadeTotalDeItens": 1
            }
          },
          "webhooks": [
            {
              "allOf": [
                {
                  "$ref": "#/components/examples/webhookResponse1/value"
                }
              ]
            }
          ]
        }
      },
      "RequisicaoInvalidaCobExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida",
          "title": "Cobrança inválida.",
          "status": 400,
          "detail": "A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o _schema_ ou está semanticamente errada.",
          "violacoes": [
            {
              "razao": "O campo cob.valor.original não respeita o _schema_.",
              "propriedade": "cob.valor.original"
            }
          ]
        }
      },
      "OperacaoInvalidaCobExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida",
          "title": "Operação inválida.",
          "status": 400,
          "detail": "A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o _schema_ ou está semanticamente errada."
        }
      },
      "RequisicaoInvalidaCobVExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida",
          "title": "Cobrança inválida.",
          "status": 400,
          "detail": "A requisição que busca alterar ou criar uma cobrança com vencimento não respeita o _schema_ ou está semanticamente errada.",
          "violacoes": [
            {
              "razao": "O objeto cobv.devedor não respeita o _schema_.",
              "propriedade": "cobv.devedor"
            }
          ]
        }
      },
      "OperacaoInvalidaCobVExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida",
          "title": "Operação inválida.",
          "status": 400,
          "detail": "Cobrança não encontra-se mais com o status ATIVA, somente cobranças ativas podem ser revisadas."
        }
      },
      "RequisicaoInvalidaCobPayloadExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado",
          "title": "Cobrança não encontrada.",
          "status": 404,
          "detail": "A cobrança em questão não foi encontrada para a location requisitada."
        }
      },
      "RequisicaoInvalidaLoteCobVExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/LoteCobVOperacaoInvalida",
          "title": "Lote de cobranças inválido.",
          "status": 400,
          "detail": "A requisição que busca alterar ou criar um lote de cobranças com vencimento não respeita o _schema_ ou está semanticamente errada.",
          "violacoes": [
            {
              "razao": "O objeto loteCobV.cobsV não respeita o _schema_.",
              "propriedade": "loteCobV.cobsV"
            },
            {
              "razao": "O campo loteCobV.descricao não respeita o _schema_.",
              "propriedade": "loteCobV.descricao"
            }
          ]
        }
      },
      "RequisicaoInvalidaDevolucaoExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/PixDevolucaoInvalida",
          "title": "Devolução inválida.",
          "status": 400,
          "detail": "A presente requisição de devolução não respeita o _schema_ ou não faz sentido semanticamente."
        }
      },
      "RequisicaoInvalidaWebhookExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/WebhookOperacaoInvalida",
          "title": "Webhook inválido.",
          "status": 400,
          "detail": "A presente requisição busca criar um webhook sem respeitar o _schema_ ou, ainda, com sentido semanticamente inválido."
        }
      },
      "RequisicaoInvalidaLocationExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/PayloadLocationOperacaoInvalida",
          "title": "PayloadLocation inválido.",
          "status": 400,
          "detail": "A presente requisição busca criar uma location sem respeitar o _schema_ estabelecido."
        }
      },
      "AcessoNegadoExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/AcessoNegado",
          "title": "Acesso Negado",
          "status": 403,
          "detail": "Requisição de participante autenticado que viola alguma regra de autorização."
        }
      },
      "NaoEncontradoExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/NaoEncontrado",
          "title": "Não Encontrado",
          "status": 404,
          "detail": "Entidade não encontrada."
        }
      },
      "ServicoIndisponivelExample1": {
        "summary": "Exemplo de erro da requisição 1",
        "value": {
          "type": "https://pix.bcb.gov.br/api/v2/error/ServicoIndisponivel",
          "title": "Serviço Indisponível",
          "status": 503,
          "detail": "Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora da janela de funcionamento."
        }
      }
    },
    "requestBodies": {
      "CobBody": {
        "description": "Dados para geração da cobrança imediata.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CobSolicitada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/cobBody2"
              },
              "exemplo2": {
                "$ref": "#/components/examples/cobBody6"
              },
              "exemplo3": {
                "$ref": "#/components/examples/cobBody8"
              },
              "exemplo4": {
                "$ref": "#/components/examples/cobBody9"
              }
            }
          }
        }
      },
      "CobVBody": {
        "description": "Dados para geração da cobrança com vencimento.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CobVSolicitada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/cobBody1"
              }
            }
          }
        }
      },
      "LoteCobVBody": {
        "description": "Dados para geração de lote de cobranças com vencimento.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "descricao",
                "cobsv"
              ],
              "properties": {
                "descricao": {
                  "type": "string",
                  "title": "Descrição do lote"
                },
                "cobsv": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "txid"
                        ],
                        "properties": {
                          "txid": {
                            "$ref": "#/components/schemas/TxId"
                          }
                        }
                      },
                      {
                        "$ref": "#/components/schemas/CobVSolicitada"
                      }
                    ]
                  }
                }
              }
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/loteCobVBody1"
              }
            }
          }
        }
      },
      "LoteCobVBodyRevisado": {
        "description": "Dados para geração de lote de cobranças com vencimento.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "descricao": {
                  "type": "string",
                  "title": "Descrição do lote"
                },
                "cobsv": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "txid"
                        ],
                        "properties": {
                          "txid": {
                            "$ref": "#/components/schemas/TxId"
                          }
                        }
                      },
                      {
                        "$ref": "#/components/schemas/CobVRevisada"
                      }
                    ]
                  }
                }
              }
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/loteCobVBodyRevisado1"
              }
            }
          }
        }
      },
      "CobBodyRevisada": {
        "description": "Dados para geração da cobrança.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CobRevisada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/cobBody3"
              },
              "exemplo2": {
                "$ref": "#/components/examples/cobBody4"
              },
              "exemplo3": {
                "$ref": "#/components/examples/cobBody5"
              }
            }
          }
        }
      },
      "CobVBodyRevisada": {
        "description": "Dados para geração da cobrança.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CobVRevisada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/cobBody7"
              },
              "exemplo2": {
                "$ref": "#/components/examples/cobBody4"
              },
              "exemplo3": {
                "$ref": "#/components/examples/cobBody5"
              }
            }
          }
        }
      },
      "PayloadLocationBody": {
        "description": "Dados para geração da location.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLocationSolicitada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/payloadLocationBody1"
              }
            }
          }
        }
      },
      "DevolucaoBody": {
        "description": "Dados para pedido de devolução.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevolucaoSolicitada"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/devolucaoSolicitada1"
              }
            }
          }
        }
      },
      "WebhookConfigBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WebhookSolicitado"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/webhookBody1"
              }
            }
          }
        }
      },
      "WebhookPixBody": {
        "description": "Dados para notificação dos Pix.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "pix": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pix"
                  },
                  "example": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/examples/pixWebhook1/value"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/examples/pixWebhook2/value"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "TxId": {
        "type": "string",
        "title": "Id da Transação",
        "description": "Identificador da transação.",
        "pattern": "[a-zA-Z0-9]{26,35}"
      },
      "EndToEndId": {
        "type": "string",
        "title": "Id fim a fim da transação",
        "description": "EndToEndIdentification que transita na PACS002, PACS004 e PACS008.",
        "pattern": "[a-zA-Z0-9]{32}",
        "minLength": 32,
        "maxLength": 32
      },
      "DevolucaoId": {
        "type": "string",
        "title": "Id da Devolução",
        "description": "Id gerado pelo cliente para representar unicamente uma devolução.",
        "pattern": "[a-zA-Z0-9]{1,35}"
      },
      "DevolucaoSolicitadaNatureza": {
        "type": "string",
        "title": "Natureza da Devolução Solicitada",
        "description": "Natureza da Devolução Solicitada.",
        "enum": [
          "ORIGINAL",
          "RETIRADA"
        ]
      },
      "DevolucaoNatureza": {
        "type": "string",
        "title": "Natureza da Devolução",
        "description": "Natureza da Devolução.",
        "enum": [
          "ORIGINAL",
          "RETIRADA",
          "MED_OPERACIONAL",
          "MED_FRAUDE"
        ]
      },
      "PayloadLocationId": {
        "type": "integer",
        "format": "int64",
        "title": "Id da location",
        "description": "Identificador da location a ser informada na criação da cobrança.",
        "readOnly": true
      },
      "Revisao": {
        "type": "integer",
        "format": "int32",
        "title": "Revisão",
        "description": "Denota a revisão da cobrança.",
        "readOnly": true
      },
      "PessoaFisica": {
        "x-refersTo": [
          "Pessoa Natural",
          "Titular de DP",
          "Titular Identificável",
          "Dado Pessoal (DP)"
        ],
        "type": "object",
        "required": [
          "cpf",
          "nome"
        ],
        "title": "Pessoa Física",
        "properties": {
          "cpf": {
            "x-refersTo": "Dado Pessoal (DP)",
            "type": "string",
            "title": "CPF",
            "pattern": "/^\\d{11}$/",
            "description": "CPF do usuário."
          },
          "nome": {
            "x-refersTo": "Dado Pessoal (DP)",
            "type": "string",
            "title": "Nome",
            "description": "Nome do usuário.",
            "maxLength": 200
          }
        }
      },
      "PessoaJuridica": {
        "x-refersTo": [
          "Pessoa Jurídica"
        ],
        "type": "object",
        "required": [
          "cnpj",
          "nome"
        ],
        "title": "Pessoa Jurídica",
        "properties": {
          "cnpj": {
            "type": "string",
            "title": "CNPJ",
            "pattern": "/^\\d{14}$/",
            "description": "CNPJ do usuário."
          },
          "nome": {
            "type": "string",
            "title": "Nome",
            "description": "Nome do usuário.",
            "maxLength": 200
          }
        }
      },
      "DadosComplementaresPessoa": {
        "type": "object",
        "properties": {
          "logradouro": {
            "type": "string",
            "title": "Logradouro",
            "description": "Logradouro do usuário.",
            "maxLength": 200
          },
          "cidade": {
            "type": "string",
            "title": "Cidade",
            "description": "Cidade do usuário.",
            "maxLength": 200
          },
          "uf": {
            "type": "string",
            "title": "UF",
            "description": "UF do usuário.",
            "maxLength": 2
          },
          "cep": {
            "type": "string",
            "title": "CEP",
            "description": "CEP do usuário.",
            "maxLength": 8
          }
        }
      },
      "DadosDevedor": {
        "type": "object",
        "properties": {
          "devedor": {
            "description": "O objeto devedor organiza as informações sobre o devedor da cobrança.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PessoaFisica"
              },
              {
                "$ref": "#/components/schemas/PessoaJuridica"
              }
            ],
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "email": {
                    "x-refersTo": [
                      "Dado Pessoal (DP)"
                    ],
                    "type": "string",
                    "title": "Email",
                    "description": "Email do usuário."
                  }
                }
              },
              {
                "$ref": "#/components/schemas/DadosComplementaresPessoa"
              }
            ]
          }
        }
      },
      "DadosRecebedor": {
        "type": "object",
        "required": [
          "logradouro",
          "cidade",
          "uf",
          "cep"
        ],
        "properties": {
          "recebedor": {
            "description": "O objeto recebedor organiza as informações sobre o credor da cobrança.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/PessoaFisica"
              },
              {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "nomeFantasia": {
                        "x-refersTo": "Pessoa Jurídica",
                        "type": "string",
                        "title": "Nome fantasia",
                        "description": "Nome fantasia.",
                        "maxLength": 200
                      }
                    }
                  }
                ]
              }
            ],
            "allOf": [
              {
                "required": [
                  "logradouro",
                  "cidade",
                  "uf",
                  "cep"
                ]
              },
              {
                "$ref": "#/components/schemas/DadosComplementaresPessoa"
              }
            ]
          }
        }
      },
      "WebhookSolicitado": {
        "type": "object",
        "required": [
          "webhookUrl"
        ],
        "title": "WebhookSolicitado",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://pix.example.com/api/webhook/"
          }
        }
      },
      "WebhookCompleto": {
        "type": "object",
        "required": [
          "webhookUrl",
          "chave",
          "criacao"
        ],
        "title": "WebhookCompleto",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://pix.example.com/api/webhook/"
          },
          "chave": {
            "x-refersTo": [
              "Dado Pessoal (DP)"
            ],
            "type": "string",
            "title": "Chave DICT do recebedor",
            "description": "Formato do campo chave: O campo chave determina a chave Pix registrada no DICT que será utilizada para a cobrança. Essa chave será lida pelo aplicativo do PSP do pagador para consulta ao DICT, que retornará a informação que identificará o recebedor da cobrança. Os tipos de chave podem ser: `TELEFONE, E-MAIL, CPF/CNPJ ou EVP`. O formato das chaves pode ser encontrado na seção 'Formatação das chaves do DICT no BR Code' do [Manual de Padrões para iniciação do Pix](https://www.bcb.gov.br/estabilidadefinanceira/pix).",
            "maxLength": 77
          },
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Criação",
            "description": "Data e hora em que o webhook foi cadastrado. Respeita RFC 3339.",
            "readOnly": true
          }
        }
      },
      "CobExpiracao": {
        "type": "object",
        "title": "Expiração",
        "properties": {
          "expiracao": {
            "type": "integer",
            "format": "int32",
            "title": "Tempo de vida da cobrança, especificado em segundos.",
            "description": "Tempo de vida da cobrança, especificado em segundos a partir da data de criação (Calendario.criacao)",
            "example": "3600",
            "default": "86400"
          }
        }
      },
      "CobDataDeVencimento": {
        "type": "object",
        "title": "Data de Vencimento",
        "required": [
          "dataDeVencimento"
        ],
        "properties": {
          "dataDeVencimento": {
            "type": "string",
            "format": "date",
            "title": "Data de vencimento da cobrança",
            "description": "Trata-se de uma data, no formato `YYYY-MM-DD`, segundo ISO 8601. É a data de vencimento da cobrança. A cobrança pode ser honrada até esse dia, inclusive, em qualquer horário do dia.",
            "example": "2020-04-01"
          },
          "validadeAposVencimento": {
            "type": "integer",
            "format": "int32",
            "title": "Validade após vencimento",
            "description": "Trata-se da quantidade de dias corridos após calendario.dataDeVencimento, em que a cobrança poderá ser paga.",
            "default": 30
          }
        }
      },
      "CobApresentacao": {
        "type": "object",
        "title": "Apresentação",
        "required": [
          "apresentacao"
        ],
        "properties": {
          "apresentacao": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp de apresentação do QR Code",
            "description": "Timestamp que indica o momento em que o payload JSON que representa a cobrança foi recuperado. Ou seja, idealmente, é o momento em que o usuário realizou a captura do QR Code para verificar os dados de pagamento. Respeita o formato definido na RFC 3339."
          }
        }
      },
      "CobCriacao": {
        "type": "object",
        "title": "Criação",
        "required": [
          "criacao"
        ],
        "properties": {
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Criação",
            "description": "Timestamp que indica o momento em que foi criada a cobrança. Respeita o formato definido na RFC 3339."
          }
        }
      },
      "CobVValor": {
        "type": "object",
        "title": "Valor da cobrança com vencimento",
        "description": "Valores monetários.",
        "properties": {
          "original": {
            "type": "string",
            "title": "Valor",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor original da cobrança."
          },
          "multa": {
            "type": "object",
            "required": [
              "modalidade",
              "valorPerc"
            ],
            "title": "Multa aplicada",
            "description": "Multa aplicada à cobrança.",
            "properties": {
              "modalidade": {
                "type": "integer",
                "format": "int32",
                "title": "Modalidade da multa",
                "minimum": 1,
                "maximum": 2,
                "description": "Modalidade da multa, conforme tabela de domínios."
              },
              "valorPerc": {
                "type": "string",
                "title": "Valor da multa absoluta",
                "description": "Multa do documento em valor absoluto ou percentual, conforme \"valor.multa.modalidade\".",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          },
          "juros": {
            "type": "object",
            "required": [
              "modalidade",
              "valorPerc"
            ],
            "title": "Juro aplicado",
            "description": "Juro aplicado à cobrança.",
            "properties": {
              "modalidade": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 8,
                "title": "Modalidade de juros",
                "description": "Modalidade de juros, conforme tabela de domínios."
              },
              "valorPerc": {
                "type": "string",
                "title": "Valor",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          },
          "abatimento": {
            "title": "Abatimento aplicado",
            "required": [
              "modalidade",
              "valorPerc"
            ],
            "description": "Abatimento aplicado à cobrança",
            "properties": {
              "modalidade": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 2,
                "title": "Modalidade de abatimentos",
                "description": "Modalidade de abatimentos, conforme tabela de domínios."
              },
              "valorPerc": {
                "type": "string",
                "title": "Abatimentos",
                "description": "Abatimentos ou outras deduções aplicadas ao documento, em valor absoluto ou percentual do valor original do documento.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          },
          "desconto": {
            "title": "Descontos aplicados",
            "required": [
              "modalidade"
            ],
            "description": "Descontos aplicados à cobrança",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "modalidade": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 6,
                    "title": "Modalidade de descontos",
                    "description": "Modalidade de desconto, conforme tabela de domínios."
                  }
                }
              }
            ],
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "descontoDataFixa": {
                    "title": "Lista de Descontos",
                    "description": "Descontos absolutos aplicados à cobrança.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 3,
                    "uniqueItems": true,
                    "items": {
                      "required": [
                        "data",
                        "valorPerc"
                      ],
                      "allOf": [
                        {
                          "properties": {
                            "data": {
                              "title": "Data limite para o desconto absoluto da cobrança",
                              "description": "Descontos por pagamento antecipado, com data fixa. Matriz com até três elementos, sendo que cada elemento é composto por um par \"data e valorPerc\", para estabelecer descontos percentuais ou absolutos, até aquela data de pagamento. Trata-se de uma data, no formato `YYYY-MM-DD`, segundo ISO 8601. A data de desconto obrigatoriamente deverá ser menor que a data de vencimento da cobrança.",
                              "type": "string",
                              "format": "date",
                              "example": "2020-04-01"
                            }
                          }
                        },
                        {
                          "properties": {
                            "valorPerc": {
                              "type": "string",
                              "title": "Valor do desconto absoluto",
                              "description": "Desconto em valor absoluto ou percentual por dia, útil ou corrido, conforme valor.desconto.modalidade",
                              "pattern": "\\d{1,10}\\.\\d{2}"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "valorPerc"
                ],
                "properties": {
                  "valorPerc": {
                    "type": "string",
                    "title": "Abatimentos",
                    "description": "Abatimentos ou outras deduções aplicadas ao documento, em valor absoluto ou percentual do valor original do documento.",
                    "pattern": "\\d{1,10}\\.\\d{2}"
                  }
                }
              }
            ]
          }
        }
      },
      "CobValor": {
        "type": "object",
        "title": "Valor da cobrança imediata",
        "description": "valores monetários referentes à cobrança.",
        "properties": {
          "original": {
            "type": "string",
            "title": "Valor",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor original da cobrança."
          },
          "modalidadeAlteracao": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1,
            "title": "Modalidade de alteração",
            "description": "Trata-se de um campo que determina se o valor final do documento pode ser alterado pelo pagador. Na ausência desse campo, assume-se que não se pode alterar o valor do documento de cobrança, ou seja, assume-se o valor 0. Se o campo estiver presente e com valor 1, então está determinado que o valor final da cobrança pode ter seu valor alterado pelo pagador."
          },
          "retirada": {
            "description": "É uma estrutura opcional relacionada ao conceito de recebimento de numerário. Apenas um agrupamento por vez é permitido, quando há `saque` não há `troco` e vice-versa. Quando uma cobrança imediata tem uma estrutura de `retirada` ela deixa de ser considerada Pix comum e passa à categoria de Pix Saque ou Pix Troco.",
            "title": "Informações de retirada",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "saque": {
                    "type": "object",
                    "title": "Saque",
                    "required": [
                      "valor",
                      "modalidadeAgente",
                      "prestadorDoServicoDeSaque"
                    ],
                    "description": "Informações relacionadas ao saque",
                    "properties": {
                      "valor": {
                        "type": "string",
                        "title": "Valor do saque",
                        "pattern": "\\d{1,10}\\.\\d{2}",
                        "description": "Valor do saque efetuado"
                      },
                      "modalidadeAlteracao": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0,
                        "title": "Modalidade de alteração do saque",
                        "description": "Modalidade de alteração de valor do saque. Quando não preenchido o valor assumido é o 0 (zero)."
                      },
                      "modalidadeAgente": {
                        "type": "string",
                        "title": "Modalidade do Agente",
                        "description": "Modalidade do Agente",
                        "enum": [
                          "AGTEC",
                          "AGTOT",
                          "AGPSS"
                        ]
                      },
                      "prestadorDoServicoDeSaque": {
                        "type": "string",
                        "title": "Prestador do Serviço de Saque",
                        "pattern": "\\d{8}",
                        "description": "ISPB do Prestador do Serviço de Saque"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "troco": {
                    "type": "object",
                    "title": "Troco",
                    "required": [
                      "valor",
                      "modalidadeAgente",
                      "prestadorDoServicoDeSaque"
                    ],
                    "description": "Informações relacionadas ao troco.",
                    "properties": {
                      "valor": {
                        "type": "string",
                        "title": "Valor do troco",
                        "pattern": "\\d{1,10}\\.\\d{2}",
                        "description": "Valor do troco efetuado."
                      },
                      "modalidadeAlteracao": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0,
                        "title": "Modalidade de alteração do troco",
                        "description": "Modalidade de alteração de valor do troco. Quando não preenchido o valor assumido é o 0 (zero)."
                      },
                      "modalidadeAgente": {
                        "type": "string",
                        "title": "Modalidade do Agente",
                        "description": "Modalidade do Agente.",
                        "enum": [
                          "AGTEC"
                        ]
                      },
                      "prestadorDoServicoDeSaque": {
                        "type": "string",
                        "title": "Prestador do Serviço de Saque",
                        "pattern": "\\d{8}",
                        "description": "ISPB do Prestador do Serviço de Saque."
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CobPayloadValor": {
        "type": "object",
        "title": "Valor da cobrança imediata retornada pelo payload",
        "required": [
          "original"
        ],
        "description": "Todos os campos que indicam valores monetários obedecem ao pattern \\d{1,10}\\.\\d{2}. O separador decimal é o caractere ponto. Não é aplicável utilizar separador de milhar. Exemplos de valores aderentes ao padrão: '1.00', '123.99', '123456789.23'.",
        "properties": {
          "original": {
            "type": "string",
            "title": "Valor",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor original da cobrança."
          },
          "modalidadeAlteracao": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1,
            "title": "Modalidade de alteração",
            "description": "Trata-se de um campo que determina se o valor final do documento pode ser alterado pelo pagador. Na ausência desse campo, assume-se que não se pode alterar o valor do documento de cobrança, ou seja, assume-se o valor 0. Se o campo estiver presente e com valor 1, então está determinado que o valor final da cobrança pode ter seu valor alterado pelo pagador."
          },
          "retirada": {
            "description": "É uma estrutura opcional relacionada ao conceito de recebimento de numerário. Apenas um agrupamento por vez é permitido, quando há `saque` não há `troco` e vice-versa. Quando uma cobrança imediata tem uma estrutura de `retirada` ela deixa de ser considerada Pix comum e passa à categoria de Pix Saque ou Pix Troco. ",
            "title": "Informações de retirada",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "saque": {
                    "type": "object",
                    "title": "Saque",
                    "required": [
                      "valor",
                      "modalidadeAgente",
                      "prestadorDoServicoDeSaque"
                    ],
                    "description": "Informações relacionadas ao saque",
                    "properties": {
                      "valor": {
                        "type": "string",
                        "title": "Valor do saque",
                        "pattern": "\\d{1,10}\\.\\d{2}",
                        "description": "Valor do saque efetuado"
                      },
                      "modalidadeAlteracao": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0,
                        "title": "Modalidade de alteração do saque",
                        "description": "Modalidade de alteração de valor do saque. Quando não preenchido o valor assumido é o 0 (zero)."
                      },
                      "modalidadeAgente": {
                        "type": "string",
                        "title": "Modalidade do Agente",
                        "description": "Modalidade do Agente",
                        "enum": [
                          "AGTEC",
                          "AGTOT",
                          "AGPSS"
                        ]
                      },
                      "prestadorDoServicoDeSaque": {
                        "type": "string",
                        "title": "Prestador do Serviço de Saque",
                        "pattern": "\\d{8}",
                        "description": "ISPB do Prestador do Serviço de Saque"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "troco": {
                    "type": "object",
                    "title": "Troco",
                    "required": [
                      "valor",
                      "modalidadeAgente",
                      "prestadorDoServicoDeSaque"
                    ],
                    "description": "Informações relacionadas ao troco",
                    "properties": {
                      "valor": {
                        "type": "string",
                        "title": "Valor do troco",
                        "pattern": "\\d{1,10}\\.\\d{2}",
                        "description": "Valor do troco efetuado"
                      },
                      "modalidadeAlteracao": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0,
                        "title": "Modalidade de alteração do troco",
                        "description": "Modalidade de alteração de valor do troco. Quando não preenchido o valor assumido é o 0 (zero)."
                      },
                      "modalidadeAgente": {
                        "type": "string",
                        "title": "Modalidade do Agente",
                        "description": "Modalidade do Agente",
                        "enum": [
                          "AGTEC",
                          "AGTOT",
                          "AGPSS"
                        ]
                      },
                      "prestadorDoServicoDeSaque": {
                        "type": "string",
                        "title": "Prestador do Serviço de Saque",
                        "pattern": "\\d{8}",
                        "description": "ISPB do Prestador do Serviço de Saque"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CobVPayloadValor": {
        "type": "object",
        "title": "Valor da cobrança com vencimento calculada retornada pelo payload",
        "required": [
          "final"
        ],
        "description": "Todos os campos que indicam valores monetários obedecem ao pattern \\d{1,10}\\.\\d{2}. O separador decimal é o caractere ponto. Não é aplicável utilizar separador de milhar. Exemplos de valores aderentes ao padrão: “1.00”, “123.99”, “123456789.23”.",
        "properties": {
          "original": {
            "type": "string",
            "title": "Valor",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor original da cobrança."
          },
          "multa": {
            "title": "Multa aplicada",
            "description": "Multa aplicada à cobrança",
            "type": "string",
            "pattern": "\\d{1,10}\\.\\d{2}"
          },
          "juros": {
            "title": "Juro aplicado",
            "description": "Juro aplicado à cobrança",
            "type": "string",
            "pattern": "\\d{1,10}\\.\\d{2}"
          },
          "abatimento": {
            "title": "Abatimento aplicado",
            "description": "Abatimento aplicado à cobrança",
            "type": "string",
            "pattern": "\\d{1,10}\\.\\d{2}"
          },
          "desconto": {
            "title": "Desconto aplicado",
            "description": "Descontos aplicados à cobrança",
            "type": "string",
            "pattern": "\\d{1,10}\\.\\d{2}"
          },
          "final": {
            "type": "string",
            "title": "Valor final",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor final da cobrança."
          }
        }
      },
      "CobBase": {
        "type": "object",
        "title": "Cobrança Base",
        "description": "Atributos comuns a todas entidades de Cobrança",
        "properties": {
          "chave": {
            "x-refersTo": [
              "Dado Pessoal (DP)"
            ],
            "type": "string",
            "title": "Chave DICT do recebedor",
            "description": "Formato do campo chave: O campo chave determina a chave Pix registrada no DICT que será utilizada para a cobrança. Essa chave será lida pelo aplicativo do PSP do pagador para consulta ao DICT, que retornará a informação que identificará o recebedor da cobrança. Os tipos de chave podem ser: `TELEFONE, E-MAIL, CPF/CNPJ ou EVP`. O formato das chaves pode ser encontrado na seção 'Formatação das chaves do DICT no BR Code' do [Manual de Padrões para iniciação do Pix](https://www.bcb.gov.br/estabilidadefinanceira/pix).",
            "maxLength": 77
          },
          "solicitacaoPagador": {
            "type": "string",
            "title": "Solicitação ao pagador",
            "description": "O campo solicitacaoPagador, opcional, determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata, em formato livre, a ser enviada ao recebedor. Esse texto será preenchido, na pacs.008, pelo PSP do pagador, no campo RemittanceInformation <RmtInf>. O tamanho do campo <RmtInf> na pacs.008 está limitado a 140 caracteres.",
            "maxLength": 140
          },
          "infoAdicionais": {
            "type": "array",
            "title": "Informações adicionais",
            "description": "Cada respectiva informação adicional contida na lista (nome e valor) deve ser apresentada ao pagador.",
            "maximum": 50,
            "items": {
              "type": "object",
              "required": [
                "nome",
                "valor"
              ],
              "properties": {
                "nome": {
                  "x-refersTo": [
                    "Dado Pessoal (DP)"
                  ],
                  "type": "string",
                  "title": "Nome",
                  "description": "Nome do campo.",
                  "maxLength": 50
                },
                "valor": {
                  "type": "string",
                  "title": "Valor",
                  "description": "Dados do campo.",
                  "maxLength": 200
                }
              }
            }
          }
        }
      },
      "CobBaseCopiaCola": {
        "type": "object",
        "title": "Cobrança Base com Copia e Cola",
        "description": "Atributos comuns a todas entidades de Cobrança que possuem informação de Copia e Cola",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "pixCopiaECola": {
                "type": "string",
                "title": "Pix Copia e Cola correspondente à cobrança.",
                "description": "Este campo retorna o valor do Pix Copia e Cola correspondente à cobrança. Trata-se da sequência de caracteres que representa o BR Code.",
                "maxLength": 512
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobSolicitada": {
        "type": "object",
        "title": "Cobrança imediata solicitada",
        "description": "Dados enviados para criação ou alteração da cobrança imediata via API Pix",
        "required": [
          "valor",
          "chave",
          "calendario"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobExpiracao"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "devedor": {
                "description": "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo `devedor.cpf` e campo `devedor.cnpj` estejam preenchidos ao mesmo tempo. Se o campo `devedor.cnpj` está preenchido, então o campo `devedor.cpf` não pode estar preenchido, e vice-versa. Se o campo `devedor.nome` está preenchido, então deve existir ou um `devedor.cpf` ou um campo `devedor.cnpj` preenchido.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PessoaFisica"
                  },
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocationCob"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "allOf": [
                  {
                    "required": [
                      "original"
                    ]
                  },
                  {
                    "$ref": "#/components/schemas/CobValor"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobVSolicitada": {
        "type": "object",
        "title": "Cobrança com vencimento solicitada",
        "description": "Dados enviados para criação ou alteração da cobrança com vencimento via API Pix",
        "required": [
          "valor",
          "chave",
          "devedor",
          "calendario"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobDataDeVencimento"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/DadosDevedor"
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocationCob"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "allOf": [
                  {
                    "required": [
                      "original"
                    ]
                  },
                  {
                    "$ref": "#/components/schemas/CobVValor"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobRevisada": {
        "type": "object",
        "title": "Cobrança imediata revisada",
        "description": "Dados enviados para revisão da cobrança imediata via API Pix",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobExpiracao"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "devedor": {
                "description": "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo `devedor.cpf` e campo `devedor.cnpj` estejam preenchidos ao mesmo tempo. Se o campo `devedor.cnpj` está preenchido, então o campo `devedor.cpf` não pode estar preenchido, e vice-versa. Se o campo `devedor.nome` está preenchido, então deve existir ou um `devedor.cpf` ou um campo `devedor.cnpj` preenchido.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PessoaFisica"
                  },
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocationCob"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "title": "Status do registro da cobrança",
                "enum": [
                  "REMOVIDA_PELO_USUARIO_RECEBEDOR"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "$ref": "#/components/schemas/CobValor"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobVRevisada": {
        "type": "object",
        "title": "Cobrança com vencimento revisada",
        "description": "Dados enviados para revisão da cobrança com vencimento via API Pix",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobDataDeVencimento"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/DadosDevedor"
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocationCob"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "title": "Status do registro da cobrança",
                "enum": [
                  "REMOVIDA_PELO_USUARIO_RECEBEDOR"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "$ref": "#/components/schemas/CobVValor"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobGerada": {
        "type": "object",
        "title": "Cobrança imediata gerada",
        "description": "Dados criados ou alterados da cobrança imediata via API Pix",
        "required": [
          "txid",
          "calendario",
          "revisao",
          "status",
          "valor",
          "chave"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "required": [
                  "expiracao"
                ],
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobCriacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobExpiracao"
                  }
                ]
              },
              "txid": {
                "$ref": "#/components/schemas/TxId"
              },
              "revisao": {
                "$ref": "#/components/schemas/Revisao"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "devedor": {
                "description": "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo `devedor.cpf` e campo `devedor.cnpj` estejam preenchidos ao mesmo tempo. Se o campo `devedor.cnpj` está preenchido, então o campo `devedor.cpf` não pode estar preenchido, e vice-versa. Se o campo `devedor.nome` está preenchido, então deve existir ou um `devedor.cpf` ou um campo `devedor.cnpj` preenchido.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PessoaFisica"
                  },
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "required": [
                  "id",
                  "txid",
                  "tipoCob",
                  "criacao"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocation"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "title": "Localização do payload",
                "description": "Localização do Payload a ser informada na criação da cobrança.",
                "maxLength": 77,
                "format": "uri",
                "example": "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002",
                "readOnly": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "required": [
                  "original"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobValor"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBaseCopiaCola"
          }
        ]
      },
      "CobVGerada": {
        "type": "object",
        "title": "Cobrança com vencimento gerada",
        "description": "Dados criados ou alterados da cobrança com vencimento via API Pix",
        "required": [
          "location",
          "txid",
          "devedor",
          "calendario",
          "revisao",
          "status",
          "valor",
          "chave",
          "recebedor"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "required": [
                  "validadeAposVencimento"
                ],
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobCriacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobDataDeVencimento"
                  }
                ]
              },
              "txid": {
                "$ref": "#/components/schemas/TxId"
              },
              "revisao": {
                "$ref": "#/components/schemas/Revisao"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DadosDevedor"
          },
          {
            "$ref": "#/components/schemas/DadosRecebedor"
          },
          {
            "type": "object",
            "properties": {
              "loc": {
                "required": [
                  "id",
                  "txid",
                  "tipoCob",
                  "criacao"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayloadLocation"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "required": [
                  "original"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobVValor"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBaseCopiaCola"
          }
        ]
      },
      "CobrancaStatus": {
        "type": "string",
        "title": "Status do registro da cobrança.",
        "description": "Estado do registro da cobrança. Não se confunde com o estado da cobrança em si, ou seja, não guarda relação com o fato de a cobrança encontrar-se vencida ou expirada, por exemplo.",
        "enum": [
          "ATIVA",
          "CONCLUIDA",
          "REMOVIDA_PELO_USUARIO_RECEBEDOR",
          "REMOVIDA_PELO_PSP"
        ]
      },
      "LoteCobVGerado": {
        "title": "Lote de cobranças com vencimento gerado",
        "type": "object",
        "required": [
          "id",
          "descricao",
          "criacao",
          "cobsv"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "title": "Id do lote"
          },
          "descricao": {
            "type": "string",
            "title": "Descrição do lote"
          },
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de criação do lote",
            "description": "Timestamp que indica o momento em que foi criado o lote. Respeita o formato definido na RFC 3339."
          },
          "cobsv": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CobVGerada"
            }
          }
        }
      },
      "CobVCompleta": {
        "title": "Cobrança com vencimento completa",
        "required": [
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/CobVSolicitada"
          },
          {
            "$ref": "#/components/schemas/CobVGerada"
          },
          {
            "type": "object",
            "properties": {
              "pix": {
                "type": "array",
                "title": "Pix recebidos",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pix"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txid": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/TxId"
                            },
                            {
                              "pattern": "[a-zA-Z0-9]{26,35}"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          }
        ]
      },
      "CobCompleta": {
        "title": "Cobrança imediata completa",
        "required": [
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/CobSolicitada"
          },
          {
            "$ref": "#/components/schemas/CobGerada"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "pix": {
                "type": "array",
                "title": "Pix recebidos",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pix"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "txid": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/TxId"
                            },
                            {
                              "pattern": "[a-zA-Z0-9]{26,35}"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "LoteCobVConsultado": {
        "title": "Lote de solicitações de alteração ou criação de cobranças com vencimento",
        "type": "object",
        "required": [
          "id",
          "descricao",
          "criacao",
          "cobsv"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "title": "Id do lote"
          },
          "descricao": {
            "type": "string",
            "title": "Descrição do lote"
          },
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de criação do lote",
            "description": "Timestamp que indica o momento em que foi criado o lote. Respeita o formato definido na RFC 3339."
          },
          "cobsv": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "txid",
                "status"
              ],
              "properties": {
                "txid": {
                  "$ref": "#/components/schemas/TxId"
                },
                "status": {
                  "type": "string",
                  "title": "Status da solicitação de criação/alteração da cobrança no contexto de criação via lote",
                  "enum": [
                    "EM_PROCESSAMENTO",
                    "CRIADA",
                    "NEGADA"
                  ]
                },
                "problema": {
                  "$ref": "#/components/schemas/Problema"
                },
                "criacao": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Data de Criação",
                  "description": "Data e hora em que a cobrança foi criada. Respeita RFC 3339.",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "LotesCobVConsultados": {
        "title": "Lotes de solicitações de cobranças com vencimento",
        "type": "object",
        "required": [
          "parametros",
          "lotes"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaLote"
          },
          "lotes": {
            "type": "array",
            "title": "Lotes de solicitações de criação/alteração de cobranças com vencimento",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LoteCobVConsultado"
                }
              ]
            }
          }
        }
      },
      "CobVPayload": {
        "type": "object",
        "title": "Payload JSON da cobrança com vencimento",
        "description": "Dados da cobrança com vencimento acessados pelo payload JSON",
        "required": [
          "txid",
          "calendario",
          "revisao",
          "status",
          "valor",
          "chave",
          "devedor",
          "recebedor"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "required": [
                  "criacao",
                  "apresentacao",
                  "validadeAposVencimento"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobCriacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobApresentacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobDataDeVencimento"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "devedor": {
                "description": "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo `devedor.cpf` e campo `devedor.cnpj` estejam preenchidos ao mesmo tempo. Se o campo `devedor.cnpj` está preenchido, então o campo `devedor.cpf` não pode estar preenchido, e vice-versa. Se o campo `devedor.nome` está preenchido, então deve existir ou um `devedor.cpf` ou um campo `devedor.cnpj` preenchido.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PessoaFisica"
                  },
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  }
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/DadosRecebedor"
          },
          {
            "type": "object",
            "properties": {
              "txid": {
                "$ref": "#/components/schemas/TxId"
              },
              "revisao": {
                "$ref": "#/components/schemas/Revisao"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "$ref": "#/components/schemas/CobVPayloadValor"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "CobPayload": {
        "type": "object",
        "title": "Payload JSON da cobrança imediata",
        "description": "Dados da cobrança imediata acessados pelo payload JSON",
        "required": [
          "txid",
          "calendario",
          "revisao",
          "status",
          "valor",
          "chave"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "calendario": {
                "title": "Calendário",
                "description": "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.",
                "required": [
                  "criacao",
                  "apresentacao",
                  "expiracao"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CobCriacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobApresentacao"
                  },
                  {
                    "$ref": "#/components/schemas/CobExpiracao"
                  }
                ]
              },
              "txid": {
                "$ref": "#/components/schemas/TxId"
              },
              "revisao": {
                "$ref": "#/components/schemas/Revisao"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "devedor": {
                "description": "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo `devedor.cpf` e campo `devedor.cnpj` estejam preenchidos ao mesmo tempo. Se o campo `devedor.cnpj` está preenchido, então o campo `devedor.cpf` não pode estar preenchido, e vice-versa. Se o campo `devedor.nome` está preenchido, então deve existir ou um `devedor.cpf` ou um campo `devedor.cnpj` preenchido.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PessoaFisica"
                  },
                  {
                    "$ref": "#/components/schemas/PessoaJuridica"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/CobrancaStatus"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "valor": {
                "$ref": "#/components/schemas/CobPayloadValor"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CobBase"
          }
        ]
      },
      "PayloadLocation": {
        "type": "object",
        "title": "Location do Payload",
        "description": "Identificador da localização do payload.",
        "required": [
          "id",
          "location",
          "tipoCob",
          "criacao"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PayloadLocationId"
          },
          "location": {
            "type": "string",
            "title": "Localização do payload",
            "description": "Localização do Payload a ser informada na criação da cobrança.",
            "maxLength": 77,
            "format": "uri",
            "example": "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002",
            "readOnly": true
          },
          "tipoCob": {
            "type": "string",
            "title": "Tipo da cobrança",
            "enum": [
              "cob",
              "cobv"
            ]
          },
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Criação",
            "description": "Data e hora em que a location foi criada. Respeita RFC 3339.",
            "readOnly": true
          }
        }
      },
      "PayloadLocationSolicitada": {
        "type": "object",
        "title": "Location do Payload Solicitada",
        "description": "Identificador da localização do payload solicitada.",
        "required": [
          "tipoCob"
        ],
        "properties": {
          "tipoCob": {
            "type": "string",
            "title": "Tipo da cobrança",
            "enum": [
              "cob",
              "cobv"
            ]
          }
        }
      },
      "PayloadLocationCompleta": {
        "type": "object",
        "title": "Location do Payload Completa",
        "description": "Identificador da localização do payload completo.",
        "required": [
          "id",
          "location",
          "tipoCob",
          "criacao"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PayloadLocationId"
          },
          "txid": {
            "$ref": "#/components/schemas/TxId"
          },
          "location": {
            "type": "string",
            "title": "Localização do payload",
            "description": "Localização do Payload a ser informada na criação da cobrança.",
            "maxLength": 77,
            "format": "uri",
            "example": "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002",
            "readOnly": true
          },
          "tipoCob": {
            "type": "string",
            "title": "Tipo da cobrança",
            "enum": [
              "cob",
              "cobv"
            ]
          },
          "criacao": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Criação",
            "description": "Data e hora em que a location foi criada. Respeita RFC 3339.",
            "readOnly": true
          }
        }
      },
      "PayloadLocationCob": {
        "type": "object",
        "title": "Location do Payload",
        "required": [
          "id",
          "tipoCob"
        ],
        "description": "Identificador da localização do payload.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PayloadLocationId"
          }
        }
      },
      "ParametrosConsultaCob": {
        "type": "object",
        "title": "Parâmetros de Consulta de Cobrança",
        "description": "[DEPRECADO] Parâmetros utilizados para a realização de uma consulta de cobranças.",
        "required": [
          "inicio",
          "fim",
          "paginacao"
        ],
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Início",
            "description": "Data inicial utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-04-01T00:00:00Z"
          },
          "fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Fim",
            "description": "Data de fim utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-04-01T17:00:00Z"
          },
          "cpf": {
            "x-refersTo": [
              "Pessoa Natural",
              "Titular de DP",
              "Dado Pessoal (DP)"
            ],
            "type": "string",
            "title": "CPF",
            "pattern": "/^\\d{11}$/",
            "description": "Filtro pelo CPF do devedor. Não pode ser utilizado ao mesmo tempo que o CNPJ."
          },
          "cnpj": {
            "x-refersTo": [
              "Pessoa Jurídica"
            ],
            "type": "string",
            "title": "CNPJ",
            "pattern": "/^\\d{14}$/",
            "description": "Filtro pelo CNPJ do devedor. Não pode ser utilizado ao mesmo tempo que o CPF."
          },
          "locationPresente": {
            "type": "boolean",
            "description": "Filtro pela existência de location vinculada."
          },
          "status": {
            "type": "string",
            "title": "Status do registro da cobrança",
            "description": "Filtro pelo status das cobranças."
          },
          "paginacao": {
            "$ref": "#/components/schemas/Paginacao"
          }
        }
      },
      "ParametrosConsultaLote": {
        "type": "object",
        "title": "Parâmetros de consulta de lotes de cobrança com vencimento.",
        "description": "Parâmetros utilizados para a realização de uma consulta de lote de cobranças com vencimento.",
        "required": [
          "inicio",
          "fim",
          "paginacao"
        ],
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Início",
            "description": "Data inicial utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-04-01T00:00:00Z"
          },
          "fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Fim",
            "description": "Data de fim utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-04-01T17:00:00Z"
          },
          "paginacao": {
            "$ref": "#/components/schemas/Paginacao"
          }
        }
      },
      "CobsVConsultadas": {
        "type": "object",
        "title": "Cobranças com vencimento consultadas",
        "required": [
          "parametros",
          "cobs"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaCob"
          },
          "cobs": {
            "type": "array",
            "title": "Lista de cobranças",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CobVCompleta"
                },
                {
                  "required": [
                    "status",
                    "txid",
                    "idCob"
                  ]
                }
              ]
            }
          }
        }
      },
      "CobsConsultadas": {
        "type": "object",
        "title": "Cobranças imediatas consultadas",
        "required": [
          "parametros",
          "cobs"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaCob"
          },
          "cobs": {
            "type": "array",
            "title": "Lista de cobranças",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CobCompleta"
                },
                {
                  "required": [
                    "status",
                    "txid",
                    "idCob"
                  ]
                }
              ]
            }
          }
        }
      },
      "Pix": {
        "type": "object",
        "title": "Pix",
        "required": [
          "endToEndId",
          "valor",
          "horario",
          "pagador"
        ],
        "properties": {
          "endToEndId": {
            "$ref": "#/components/schemas/EndToEndId"
          },
          "txid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TxId"
              },
              {
                "pattern": "[a-zA-Z0-9]{1,35}"
              }
            ]
          },
          "valor": {
            "type": "string",
            "title": "Valor do Pix.",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor do Pix."
          },
          "componentesValor": {
            "type": "object",
            "title": "Informações sobre o valor do Pix",
            "description": "O objetivo dessa estrutura é explicar os elementos de composição do valor do Pix, incluindo informações sobre as multas, juros, descontos e abatimentos quando o Pix for relativo a cobranças com vencimento.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PixValorOriginal"
              },
              {
                "$ref": "#/components/schemas/PixValorSaque"
              },
              {
                "$ref": "#/components/schemas/PixValorTroco"
              },
              {
                "$ref": "#/components/schemas/PixValorJuros"
              },
              {
                "$ref": "#/components/schemas/PixValorMulta"
              },
              {
                "$ref": "#/components/schemas/PixValorAbatimento"
              },
              {
                "$ref": "#/components/schemas/PixValorDesconto"
              }
            ]
          },
          "chave": {
            "x-refersTo": [
              "Dado Pessoal (DP)"
            ],
            "type": "string",
            "title": "Chave DICT do recebedor",
            "description": "Formato do campo chave: Campo chave do recebedor conforme atribuído na respectiva PACS008. Os tipos de chave podem ser: `TELEFONE, E-MAIL, CPF/CNPJ OU EVP`. O formato das chaves pode ser encontrado na seção 'Formatação das chaves do DICT no BR Code' do [Manual de Padrões para iniciação do Pix](https://www.bcb.gov.br/estabilidadefinanceira/pix).",
            "maxLength": 77
          },
          "horario": {
            "type": "string",
            "format": "date-time",
            "title": "Horário",
            "description": "Horário em que o Pix foi processado no PSP."
          },
          "infoPagador": {
            "type": "string",
            "title": "Informação livre do pagador",
            "maxLength": 140
          },
          "devolucoes": {
            "type": "array",
            "title": "Devoluções",
            "items": {
              "$ref": "#/components/schemas/Devolucao"
            }
          }
        }
      },
      "PixValorOriginal": {
        "type": "object",
        "properties": {
          "original": {
            "type": "object",
            "required": [
              "valor"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor original",
                "description": "Valor original do Pix.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          }
        }
      },
      "PixValorSaque": {
        "type": "object",
        "properties": {
          "saque": {
            "type": "object",
            "required": [
              "valor",
              "modalidadeAgente",
              "prestadorDoServicoDeSaque"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor do Saque Pix",
                "description": "Valor do Saque Pix.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              },
              "modalidadeAgente": {
                "type": "string",
                "title": "Modalidade do Agente",
                "description": "Modalidade do Agente.",
                "enum": [
                  "AGTEC",
                  "AGTOT",
                  "AGPSS"
                ]
              },
              "prestadorDoServicoDeSaque": {
                "type": "string",
                "title": "Prestador do Serviço de Saque",
                "pattern": "\\d{8}",
                "description": "ISPB do Prestador do Serviço de Saque."
              }
            }
          }
        }
      },
      "PixValorTroco": {
        "type": "object",
        "properties": {
          "troco": {
            "type": "object",
            "required": [
              "valor",
              "modalidadeAgente",
              "prestadorDoServicoDeSaque"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor do Troco Pix",
                "description": "Valor do Troco Pix.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              },
              "modalidadeAgente": {
                "type": "string",
                "title": "Modalidade do Agente",
                "description": "Modalidade do Agente",
                "enum": [
                  "AGTEC",
                  "AGTOT",
                  "AGPSS"
                ]
              },
              "prestadorDoServicoDeSaque": {
                "type": "string",
                "title": "Prestador do Serviço de Saque",
                "pattern": "\\d{8}",
                "description": "ISPB do Prestador do Serviço de Saque"
              }
            }
          }
        }
      },
      "PixValorJuros": {
        "type": "object",
        "properties": {
          "juros": {
            "type": "object",
            "required": [
              "valor"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor relativo aos juros.",
                "description": "Valor dos juros.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          }
        }
      },
      "PixValorMulta": {
        "type": "object",
        "properties": {
          "multa": {
            "type": "object",
            "required": [
              "valor"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor relativo a multa.",
                "description": "Valor da multa.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          }
        }
      },
      "PixValorDesconto": {
        "type": "object",
        "properties": {
          "desconto": {
            "type": "object",
            "required": [
              "valor"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor relativo a desconto.",
                "description": "Valor do desconto.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          }
        }
      },
      "PixValorAbatimento": {
        "type": "object",
        "properties": {
          "abatimento": {
            "type": "object",
            "required": [
              "valor"
            ],
            "properties": {
              "valor": {
                "type": "string",
                "title": "Valor relativo a abatimento.",
                "description": "Valor do abatimento.",
                "pattern": "\\d{1,10}\\.\\d{2}"
              }
            }
          }
        }
      },
      "Devolucao": {
        "type": "object",
        "title": "Devolução",
        "required": [
          "id",
          "rtrId",
          "valor",
          "horario",
          "status"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/DevolucaoId"
          },
          "rtrId": {
            "type": "string",
            "title": "RtrId",
            "description": "ReturnIdentification que transita na PACS004.",
            "example": "D12345678202009091000abcde123456",
            "pattern": "[a-zA-Z0-9]{32}",
            "minLength": 32,
            "maxLength": 32
          },
          "valor": {
            "type": "string",
            "title": "Valor a devolver.",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor a devolver."
          },
          "natureza": {
            "$ref": "#/components/schemas/DevolucaoNatureza"
          },
          "descricao": {
            "type": "string",
            "title": "Mensagem ao pagador relativa à devolução.",
            "maxLength": 140,
            "description": "O campo `descricao`, opcional, determina um texto a ser apresentado ao pagador contendo informações sobre a devolução. Esse texto será preenchido, na pacs.004, pelo PSP do recebedor, no campo RemittanceInformation. O tamanho do campo na pacs.004 está limitado a 140 caracteres."
          },
          "horario": {
            "type": "object",
            "properties": {
              "solicitacao": {
                "type": "string",
                "format": "date-time",
                "title": "Horário de solicitação",
                "description": "Horário no qual a devolução foi solicitada no PSP."
              },
              "liquidacao": {
                "type": "string",
                "format": "date-time",
                "title": "Horário de liquidacao",
                "description": "Horário no qual a devolução foi liquidada no PSP."
              }
            }
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da devolução.",
            "enum": [
              "EM_PROCESSAMENTO",
              "DEVOLVIDO",
              "NAO_REALIZADO"
            ]
          },
          "motivo": {
            "type": "string",
            "title": "Descrição do status.",
            "description": "Status da Devolução: Campo opcional que pode ser utilizado pelo PSP recebedor para detalhar os motivos de a devolução ter atingido o status em questão. Pode ser utilizado, por exemplo, para detalhar o motivo de a devolução não ter sido realizada.",
            "maxLength": 140
          }
        }
      },
      "DevolucaoSolicitada": {
        "type": "object",
        "required": [
          "valor"
        ],
        "properties": {
          "valor": {
            "type": "string",
            "title": "Valor",
            "pattern": "\\d{1,10}\\.\\d{2}",
            "description": "Valor solicitado para devolução. A soma dos valores de todas as devolucões não podem ultrapassar o valor total do Pix."
          },
          "natureza": {
            "$ref": "#/components/schemas/DevolucaoSolicitadaNatureza"
          },
          "descricao": {
            "type": "string",
            "title": "Mensagem ao pagador relativa à devolução.",
            "description": "O campo `descricao`, opcional, determina um texto a ser apresentado ao pagador contendo informações sobre a devolução. Esse texto será preenchido, na pacs.004, pelo PSP do recebedor, no campo RemittanceInformation. O tamanho do campo na pacs.004 está limitado a 140 caracteres.",
            "maxLength": 140
          }
        }
      },
      "ParametrosConsultaPayloadLocation": {
        "type": "object",
        "title": "Parâmetros de consulta de locations",
        "description": "Parâmetros utilizados para a realização de uma consulta de locations.",
        "required": [
          "inicio",
          "fim",
          "paginacao"
        ],
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Início",
            "description": "Data inicial utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-01-01T00:00:00Z"
          },
          "fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Fim",
            "description": "Data de fim utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-12-01T17:00:00Z"
          },
          "txIdPresente": {
            "type": "boolean",
            "description": "Filtro pela existência de txid."
          },
          "tipoCob": {
            "type": "string",
            "enum": [
              "cob",
              "cobv"
            ]
          },
          "paginacao": {
            "$ref": "#/components/schemas/Paginacao"
          }
        }
      },
      "PayloadLocationConsultadas": {
        "type": "object",
        "title": "Locations Consultadas",
        "required": [
          "parametros",
          "loc"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaPayloadLocation"
          },
          "loc": {
            "type": "array",
            "title": "Lista de locations cadastradas",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PayloadLocationCompleta"
                }
              ]
            }
          }
        }
      },
      "ParametrosConsultaPix": {
        "type": "object",
        "title": "Parâmetros de Consulta Pix",
        "description": "Parâmetros utilizados para a realização de uma consulta de Pix.",
        "required": [
          "inicio",
          "fim",
          "paginacao"
        ],
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Início",
            "description": "Data inicial utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-01-01T00:00:00Z"
          },
          "fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Fim",
            "description": "Data de fim utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-12-01T17:00:00Z"
          },
          "txid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TxId"
              },
              {
                "pattern": "[a-zA-Z0-9]{1,35}"
              }
            ]
          },
          "txIdPresente": {
            "type": "boolean",
            "description": "Filtro pela existência de txid."
          },
          "devolucaoPresente": {
            "type": "boolean",
            "description": "Filtro pela existência de devolução."
          },
          "cpf": {
            "x-refersTo": [
              "Pessoa Natural",
              "Titular de DP",
              "Dado Pessoal (DP)"
            ],
            "type": "string",
            "pattern": "/^\\d{11}$/",
            "description": "CPF"
          },
          "cnpj": {
            "x-refersTo": [
              "Pessoa Jurídica"
            ],
            "type": "string",
            "pattern": "/^\\d{14}$/",
            "description": "CNPJ"
          },
          "paginacao": {
            "$ref": "#/components/schemas/Paginacao"
          }
        }
      },
      "ParametrosConsultaWebhooks": {
        "type": "object",
        "title": "Parâmetros de Consulta de Webhooks",
        "description": "Parâmetros utilizados para a realização de uma consulta de Webhooks.",
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Início",
            "description": "Data inicial utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-01-01T00:00:00Z"
          },
          "fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data de Fim",
            "description": "Data de fim utilizada na consulta. Respeita RFC 3339.",
            "example": "2020-12-01T17:00:00Z"
          },
          "paginacao": {
            "$ref": "#/components/schemas/Paginacao"
          }
        }
      },
      "PixConsultados": {
        "type": "object",
        "title": "Pix Consultados",
        "required": [
          "parametros",
          "cobs"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaPix"
          },
          "pix": {
            "type": "array",
            "title": "Lista de Pix recebidos",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Pix"
                }
              ]
            }
          }
        }
      },
      "WebhooksConsultados": {
        "type": "object",
        "title": "Webhooks Consultados",
        "required": [
          "webhooks"
        ],
        "properties": {
          "parametros": {
            "$ref": "#/components/schemas/ParametrosConsultaWebhooks"
          },
          "webhooks": {
            "type": "array",
            "title": "Lista de Webhooks consultados",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WebhookCompleto"
                }
              ]
            }
          }
        }
      },
      "Paginacao": {
        "type": "object",
        "title": "Paginação",
        "required": [
          "paginaAtual",
          "itensPorPagina",
          "quantidadeDePaginas",
          "quantidadeTotalDeItens"
        ],
        "properties": {
          "paginaAtual": {
            "type": "integer",
            "title": "Página atual",
            "description": "Número da página recuperada.",
            "minimum": 0
          },
          "itensPorPagina": {
            "type": "integer",
            "title": "Itens por página",
            "description": "Quantidade de registros retornado na página.",
            "minimum": 1
          },
          "quantidadeDePaginas": {
            "type": "integer",
            "title": "Quantidade de páginas",
            "description": "Quantidade de páginas disponíveis para consulta.",
            "minimum": 1
          },
          "quantidadeTotalDeItens": {
            "type": "integer",
            "title": "Quantidade total de itens",
            "description": "Quantidade total de itens disponíveis de acordo com os parâmetros informados.",
            "minimum": 0
          }
        }
      },
      "Violacao": {
        "type": "object",
        "title": "Violações",
        "properties": {
          "razao": {
            "type": "string",
            "title": "Descrição do erro",
            "description": "Descrição do erro",
            "example": "Valor da cobrança não pode ser 0.00"
          },
          "propriedade": {
            "type": "string",
            "title": "Nome da propriedade",
            "description": "Nome da propriedade",
            "example": "cob.chave"
          },
          "valor": {
            "type": "string",
            "title": "Valor da propriedade",
            "description": "Valor da propriedade",
            "example": "061996671234"
          }
        }
      },
      "Problema": {
        "type": "object",
        "required": [
          "type",
          "title",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "description": "URI de referência que identifica o tipo de problema. De acordo com a RFC 7807.",
            "example": "https://pix.bcb.gov.br/api/v2/error/NaoEncontrado"
          },
          "title": {
            "type": "string",
            "description": "Descrição resumida do problema.",
            "example": "Not found"
          },
          "status": {
            "type": "integer",
            "description": "Código HTTP do status retornado.",
            "example": 404
          },
          "detail": {
            "type": "string",
            "description": "Descrição completa do problema."
          },
          "correlationId": {
            "type": "string",
            "description": "Identificador de correlação do problema para fins de suporte"
          },
          "violacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Violacao"
            }
          }
        }
      },
      "Inicio": {
        "type": "string",
        "format": "date-time",
        "title": "Data de início",
        "description": "Filtra os registros cuja data de criação seja maior ou igual que a data de início. Respeita RFC 3339."
      },
      "Fim": {
        "type": "string",
        "format": "date-time",
        "title": "Data de fim",
        "description": "Filtra os registros cuja data de criação seja menor ou igual que a data de fim. Respeita RFC 3339."
      }
    },
    "parameters": {
      "paginaAtual": {
        "in": "query",
        "name": "paginacao.paginaAtual",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "title": "Página atual",
          "minimum": 0,
          "default": 0,
          "description": "Página a ser retornada pela consulta. Se não for informada, o PSP assumirá que será 0."
        }
      },
      "itensPorPagina": {
        "in": "query",
        "name": "paginacao.itensPorPagina",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "title": "Itens por Página",
          "minimum": 1,
          "maximum": 1000,
          "default": 100,
          "description": "Quantidade máxima de registros retornados em cada página. Apenas a última página pode conter uma quantidade menor de registros."
        }
      }
    },
    "responses": {
      "RequisicaoInvalida": {
        "description": "Problemas na requisição.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Problema"
            }
          }
        }
      },
      "NaoEncontrado": {
        "description": "Recurso solicitado não foi encontrado.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problema"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/NaoEncontradoExample1"
              }
            }
          }
        }
      },
      "AcessoNegado": {
        "description": "Requisição de participante autenticado que viola alguma regra de autorização.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problema"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/AcessoNegadoExample1"
              }
            }
          }
        }
      },
      "ServicoIndisponivel": {
        "description": "Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora da janela de funcionamento.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problema"
            },
            "examples": {
              "exemplo1": {
                "$ref": "#/components/examples/ServicoIndisponivelExample1"
              }
            }
          }
        }
      }
    }
  }
}